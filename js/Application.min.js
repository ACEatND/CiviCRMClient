/***************************************************************
**
**        Developed by the Alliance for Catholic Education
**                at the University of Notre Dame
**
****************************************************************/
var currentPosition = null;

$("#HomePage").live("pagecreate", function () {
    $("#LogOutButton .ui-btn-text").text(RES_LOGOUT_LABEL);
    $("#OrganizationsListPageLinkLabel").text(RES_ORGANIZATIONS_LABEL);
    $("#IndividualsListPageLinkLabel").text(RES_INDIVIDUALS_LABEL);
    $("#HouseholdsListPageLinkLabel").text(RES_HOUSEHOLDS_LABEL);
    $("#OpportunitiesListPageLinkLabel").text(RES_OPPORTUNITIES_LABEL);
    $("#LeadsListPageLinkLabel").text(RES_LEADS_LABEL);
    $("#CallsListPageLinkLabel").text(RES_CALLS_LABEL);
    $("#MeetingsListPageLinkLabel").text(RES_MEETINGS_LABEL);
    $("#TasksListPageLinkLabel").text(RES_TASKS_LABEL);
    $("#OrganizationsListPageTitle").text(RES_ORGANIZATIONS_LABEL);
    $("#IndividualsListPageTitle").text(RES_INDIVIDUALS_LABEL);
    $("#HouseholdsListPageTitle").text(RES_HOUSEHOLDS_LABEL);
    $("#OpportunitiesListPageTitle").text(RES_OPPORTUNITIES_LABEL);
    $("#LeadsListPageTitle").text(RES_LEADS_LABEL);
    $("#CallsListPageTitle").text(RES_CALLS_LABEL);
    $("#MeetingsListPageTitle").text(RES_MEETINGS_LABEL);
    $("#TasksListPageTitle").text(RES_TASKS_LABEL);
    $("#ViewOrganizationDetailsPageTitle").text(RES_ORGANIZATION_LABEL + " " + RES_DETAILS_LABEL);
    $("#ViewIndividualDetailsPageTitle").text(RES_INDIVIDUAL_LABEL + " " + RES_DETAILS_LABEL);
    $("#ViewHouseholdDetailsPageTitle").text(RES_HOUSEHOLD_LABEL + " " + RES_DETAILS_LABEL);
    $("#ViewMeetingDetailsPageTitle").text(RES_MEETING_LABEL + " " + RES_DETAILS_LABEL);

    if (SHOW_ORGANIZATIONS) {
        $('#OrganizationsListPage .search_options input').remove();
        $('#OrganizationsListPage .search_options label').remove();
        for (index = 0; index < CONTACTS_SEARCH_DISTANCE_OPTIONS.length; index++) {
            optionLabel = CONTACTS_SEARCH_DISTANCE_OPTIONS[index].label;
            optionValue = CONTACTS_SEARCH_DISTANCE_OPTIONS[index].value;

            label = $("<label for='OrgSearchDistance" + index + "Radio'/>");
            label.text(optionLabel);
            $('#OrganizationsListPage .search_options').append(label);
            option = $("<input type='radio' id='OrgSearchDistance" + index + "Radio' class='custom' value='" + index + "' name='OrgSearchDistanceRadio' />");
            $('#OrganizationsListPage .search_options').append(option);
            option.checkboxradio();
            option.change(function () {
                if ($(this).is(":checked")) {
                    setTimeout('CiviCRMSearchOrganizations(true);', 10);
                }
            });
        }
        label = $("<label for='OrgSearchDistanceCustomRadio'>Custom distance in miles</label>");
        option = $("<input type='radio' id='OrgSearchDistanceCustomRadio' class='custom' value='-1' name='OrgSearchDistanceRadio' />");
        $('#OrganizationsListPage .search_options').append(label);
        $('#OrganizationsListPage .search_options').append(option);
        option.checkboxradio();
        customValue = $("<input type='number' id='OrgSearchDistanceCustomValue'/>");
        $('#OrganizationsListPage .search_options').append(customValue);

        label = $("<label for='OrgSearchNearAddressCheckbox'>Near address (not working for All option)</label>");
        option = $("<input type='checkbox' id='OrgSearchNearAddressCheckbox' class='custom' name='OrgSearchNearAddressCheckbox' />");
        $('#OrganizationsListPage .search_options').append(label);
        $('#OrganizationsListPage .search_options').append(option);
        option.checkboxradio();
        option.change(function () {
            isByAddress = $('#OrgSearchNearAddressCheckbox').is(":checked");
            address = $('#OrgSearchNearAddressString').val();
            if (isByAddress == true && address != null & address.length > 0) {
                setTimeout('CiviCRMSearchOrganizations(true);', 10);
            }
        });
        customValue = $("<input type='text' id='OrgSearchNearAddressString'/>");
        customValue.blur(function () {
            isByAddress = $('#OrgSearchNearAddressCheckbox').is(":checked");
            address = $('#OrgSearchNearAddressString').val();
            if (isByAddress == true && address != null & address.length > 0) {
                setTimeout('CiviCRMSearchOrganizations(true);', 10);
            }
        });
        $('#OrganizationsListPage .search_options').append(customValue);


        $('input[name="OrgSearchDistanceRadio"]').attr('checked', false);
        $('input[name="OrgSearchDistanceRadio"][value="' + CONTACTS_SEARCH_DISTANCE_DEF_OPTION_ORG + '"]').attr('checked', true);
        if ($('input[name="OrgSearchDistanceRadio"][value="' + CONTACTS_SEARCH_DISTANCE_DEF_OPTION_ORG + '"]').length == 0) {
            $('input[name="OrgSearchDistanceRadio"][value="0"]').attr('checked', true);
        }
        $('input[name="OrgSearchDistanceRadio"]').checkboxradio("refresh");
    } else {
        $("#OrganizationsButtonOnHome").hide();
    }
    if (SHOW_INDIVIDUALS) {

        $('#IndividualsListPage .search_options input').remove();
        $('#IndividualsListPage .search_options label').remove();
        for (index = 0; index < CONTACTS_SEARCH_DISTANCE_OPTIONS.length; index++) {
            optionLabel = CONTACTS_SEARCH_DISTANCE_OPTIONS[index].label;
            optionValue = CONTACTS_SEARCH_DISTANCE_OPTIONS[index].value;

            label = $("<label for='IndSearchDistance" + index + "Radio'/>");
            label.text(optionLabel);
            $('#IndividualsListPage .search_options').append(label);
            option = $("<input type='radio' id='IndSearchDistance" + index + "Radio' class='custom' value='" + index + "' name='IndSearchDistanceRadio' />");
            $('#IndividualsListPage .search_options').append(option);
            option.checkboxradio();
            option.change(function () {
                if ($(this).is(":checked")) {
                    setTimeout('CiviCRMSearchIndividuals(true);', 10);
                }
            });
        }
        label = $("<label for='IndSearchDistanceCustomRadio'>Custom distance in miles</label>");
        option = $("<input type='radio' id='IndSearchDistanceCustomRadio' class='custom' value='-1' name='IndSearchDistanceRadio' />");
        $('#IndividualsListPage .search_options').append(label);
        $('#IndividualsListPage .search_options').append(option);
        option.checkboxradio();
        customValue = $("<input type='number' id='IndSearchDistanceCustomValue'/>");
        $('#IndividualsListPage .search_options').append(customValue);
        
        label = $("<label for='IndSearchNearAddressCheckbox'>Near address (not working for All option)</label>");
        option = $("<input type='checkbox' id='IndSearchNearAddressCheckbox' class='custom' name='IndSearchNearAddressCheckbox' />");
        $('#IndividualsListPage .search_options').append(label);
        $('#IndividualsListPage .search_options').append(option);
        option.checkboxradio();
        option.change(function () {
            isByAddress = $('#IndSearchNearAddressCheckbox').is(":checked");
            address = $('#IndSearchNearAddressString').val();
            if (isByAddress == true && address != null & address.length > 0) {
                setTimeout('CiviCRMSearchIndividuals(true);', 10);
            }
        });
        customValue = $("<input type='text' id='IndSearchNearAddressString'/>");
        customValue.blur(function () {
            isByAddress = $('#IndSearchNearAddressCheckbox').is(":checked");
            address = $('#IndSearchNearAddressString').val();
            if (isByAddress == true && address != null & address.length > 0) {
                setTimeout('CiviCRMSearchIndividuals(true);', 10);
            }
        });
        $('#IndividualsListPage .search_options').append(customValue);

        $('input[name="IndSearchDistanceRadio"]').attr('checked', false);
        $('input[name="IndSearchDistanceRadio"][value="' + CONTACTS_SEARCH_DISTANCE_DEF_OPTION_IND + '"]').attr('checked', true);
        if ($('input[name="IndSearchDistanceRadio"][value="' + CONTACTS_SEARCH_DISTANCE_DEF_OPTION_IND + '"]').length == 0) {
            $('input[name="IndSearchDistanceRadio"][value="0"]').attr('checked', true);
        }
        $('input[name="IndSearchDistanceRadio"]').checkboxradio("refresh");
    } else {
        $("#IndividualsButtonOnHome").hide();
    }
    if (SHOW_HOUSEHOLDS) {
        $('#HouseholdsListPage .search_options input').remove();
        $('#HouseholdsListPage .search_options label').remove();
        for (index = 0; index < CONTACTS_SEARCH_DISTANCE_OPTIONS.length; index++) {
            optionLabel = CONTACTS_SEARCH_DISTANCE_OPTIONS[index].label;
            optionValue = CONTACTS_SEARCH_DISTANCE_OPTIONS[index].value;

            label = $("<label for='HHSearchDistance" + index + "Radio'/>");
            label.text(optionLabel);
            $('#HouseholdsListPage .search_options').append(label);
            option = $("<input type='radio' id='HHSearchDistance" + index + "Radio' class='custom' value='" + index + "' name='HHSearchDistanceRadio' />");
            $('#HouseholdsListPage .search_options').append(option);
            option.checkboxradio();
            option.change(function () {
                if ($(this).is(":checked")) {
                    setTimeout('CiviCRMSearchHouseholds(true);', 10);
                }
            });
        }
        label = $("<label for='HHSearchDistanceCustomRadio'>Custom distance in miles</label>");
        option = $("<input type='radio' id='HHSearchDistanceCustomRadio' class='custom' value='-1' name='HHSearchDistanceRadio' />");
        $('#HouseholdsListPage .search_options').append(label);
        $('#HouseholdsListPage .search_options').append(option);
        option.checkboxradio();
        customValue = $("<input type='number' id='HHSearchDistanceCustomValue'/>");
        $('#HouseholdsListPage .search_options').append(customValue);

        label = $("<label for='HHSearchNearAddressCheckbox'>Near address (not working for All option)</label>");
        option = $("<input type='checkbox' id='HHSearchNearAddressCheckbox' class='custom' name='HHSearchNearAddressCheckbox' />");
        $('#HouseholdsListPage .search_options').append(label);
        $('#HouseholdsListPage .search_options').append(option);
        option.checkboxradio();
        option.change(function () {
            isByAddress = $('#HHSearchNearAddressCheckbox').is(":checked");
            address = $('#HHSearchNearAddressString').val();
            if (isByAddress == true && address != null & address.length > 0) {
                setTimeout('CiviCRMSearchHouseholds(true);', 10);
            }
        });
        customValue = $("<input type='text' id='HHSearchNearAddressString'/>");
        customValue.blur(function () {
            isByAddress = $('#HHSearchNearAddressCheckbox').is(":checked");
            address = $('#HHSearchNearAddressString').val();
            if (isByAddress == true && address != null & address.length > 0) {
                setTimeout('CiviCRMSearchHouseholds(true);', 10);
            }
        });
        $('#HouseholdsListPage .search_options').append(customValue);

        $('input[name="HHSearchDistanceRadio"]').attr('checked', false);
        $('input[name="HHSearchDistanceRadio"][value="' + CONTACTS_SEARCH_DISTANCE_DEF_OPTION_HH + '"]').attr('checked', true);
        if ($('input[name="HHSearchDistanceRadio"][value="' + CONTACTS_SEARCH_DISTANCE_DEF_OPTION_HH + '"]').length == 0) {
            $('input[name="HHSearchDistanceRadio"][value="0"]').attr('checked', true);
        }
        $('input[name="HHSearchDistanceRadio"]').checkboxradio("refresh");
    } else {
        $("#HouseholdsButtonOnHome").hide();
    }
    if (!SHOW_OPPORTUNITIES) {
        $("#OpportunitiesButtonOnHome").hide();
    }
    if (!SHOW_LEADS) {
        $("#LeadsButtonOnHome").hide();
    }
    if (!SHOW_CALLS) {
        $("#CallsButtonOnHome").hide();
    }
    if (!SHOW_MEETINGS) {
        $("#MeetingsButtonOnHome").hide();
    }
    if (!SHOW_TASKS) {
        $("#TasksButtonOnHome").hide();
    }

    $("#OrganizationsButtonOnHome").attr("icon_order", ORGANIZATIONS_ORDER);
    $("#IndividualsButtonOnHome").attr("icon_order", INDIVIDUALS_ORDER);
    $("#HouseholdsButtonOnHome").attr("icon_order", HOUSEHOLDS_ORDER);
    $("#OpportunitiesButtonOnHome").attr("icon_order", OPPORTUNITIES_ORDER);
    $("#LeadsButtonOnHome").attr("icon_order", LEADS_ORDER);
    $("#CallsButtonOnHome").attr("icon_order", CALLS_ORDER);
    $("#MeetingsButtonOnHome").attr("icon_order", MEETINGS_ORDER);
    $("#TasksButtonOnHome").attr("icon_order", TASKS_ORDER);

    $("#HomeIconButtonsDiv>DIV").tsort({ attr: 'icon_order' });
});
$("#OpportunitiesListPage").live("pageshow", function()
{
    EnsureSession();
    CiviCRMGetOpportunitiesListFromServer(OpportunitiesListCurrentOffset)
});
$("#LeadsListPage").live("pageshow", function()
{
    EnsureSession();
    CiviCRMGetLeadsListFromServer(LeadsListCurrentOffset)
});
$("#CallsListPage").live("pageshow", function()
{
    EnsureSession();
    CiviCRMGetCallsListFromServer(CallsListCurrentOffset)
});
$("#MeetingsListPage").live("pageshow", function()
{
    EnsureSession();
    CiviCRMGetMeetingsListFromServer(MeetingsListCurrentOffset)
});
$("#TasksListPage").live("pageshow", function()
{
    EnsureSession();
    CiviCRMGetTasksListFromServer(TasksListCurrentOffset)
});
$("#EditNoteDetailsPage").live("pageshow", function () {
    EnsureSession();
    //CiviCRMEditNoteDetails(CurrentNoteId);
});
$("#EditRelationshipDetailsPage").live("pageshow", function () {
    EnsureSession();
    CiviCRMEditRelationshipDetails()
});
$("#HomePage").live("pageshow", function ()
{
    EnsureSession();
    OrganizationsListPrevOffset = 0;
    IndividualsListPrevOffset = 0;
    HouseholdsListPrevOffset = 0;
});


function EnsureSession()
{
    if (CiviSessionId === "" || CiviSessionId === null)
    {
        // try to load stored session cookie
        CiviSessionId = $.cookies.get('civicrmmsession');
        if (CiviSessionId === "" || CiviSessionId === null)
        {
            console.log("was null");
            $.mobile.changePage("#LoginPage");
            return;
        }
        $.mobile.changePage("#HomePage");
    }
}

/*function EnsureSession()
{
    if (CiviSessionId === "")
    {
        // try to load stored session cookie
        CiviSessionId = $.cookies.get('civicrmmsession');
        if (CiviSessionId === "")
        {
            $.mobile.changePage("#LoginPage");
            return;
        }
        $.mobile.changePage("#HomePage");
    }
}*/

function LoginUser(a)
{
    $.mobile.showPageLoadingMsg();
    var c = $("#SettingsPageCiviCRMUsername").val(),
	b = $("#SettingsPageCiviCRMPassword").val();

    $().crmRESTAPI('', 'login',
               {
                   name: c,
                   pass: b,
                   api_key: API_KEY,
                   key: API_KEY
               },
               {
                   ajaxURL: SERVER_REST_URL,
                   success: function(result, settings)
                   {
                       if (result)
                       {
                           if (result.is_error == 0)
                           {
                               CiviSessionId = result.key;
                               LoggedContactId = result.contact_id;
                               $.cookies.set('civicrmmsession', CiviSessionId);
                               $("#SettingsPageCiviCRMUsername").val("");
                               $("#SettingsPageCiviCRMPassword").val("");
                               $.mobile.changePage("#HomePage")
                           } else
                           {
                               a == undefined ? LoginUser(true) : alert("Login Failed");
                           }
                       } else
                       {
                           alert("An unexpected error occurred logging in.");
                       }
                       $.mobile.hidePageLoadingMsg();
                   }
               });
}
window.onbeforeunload = function()
{
    $.get(SERVER_REST_URL, {
        method: "logout",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '[{"session":"' + CiviSessionId + '"}]'
    })
};
function LogOutUser()
{
    $.get(SERVER_REST_URL, {
        method: "logout",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '[{"session":"' + CiviSessionId + '"}]'
    },
	function()
	{
	    $.cookies.del('civicrmmsession');
	    $.mobile.changePage("#LoginPage", {
	        reverse: "true"
	    })
	})
}

/* =========== Contact Notes =========== */ 
function getContactRelatedNotesInsetList(contactId) {

    $(".ui-page-active ul.NotesListUl li").remove();

    $(".ui-page-active ul.NotesListUl").append('<li data-role="list-divider" role="heading" data-icon="plus" data-theme="b">'
    + '<div data-role="controlgroup" data-type="horizontal"><span style="text-align: left;">Notes</span>'
    + '<a href="#EditNoteDetailsPage" onclick="CiviCRMNewNoteDetails(' + contactId + ', ' + LoggedContactId + ');" id="addNote" style="float: right; color: #FFFFFF; text-decoration: none;" data-role="button" data-icon="plus" data-inline="true" data-iconpos="right" data-mini="true">Add</a></div></li>');

    CurrentNoteId = "";

    $().crmRESTAPI('note', 'get',
               {
                   entity_table: "civicrm_contact",
                   entity_id: contactId,
                   api_key: API_KEY,
                   key: CiviSessionId
               },
               {
                   ajaxURL: SERVER_REST_URL,
                   success: function (result, settings) {
                       if (result) {
                           if (result.is_error == 0) {
                               if (result.values != undefined) {
                                   $.each(result.values, function (index, value) {
                                       if (typeof value == 'object') {
                                           if (value.privacy == "1" && value.contact_id != LoggedContactId) {
                                               return;
                                           }

                                           subject = (value.subject === undefined || value.subject == null) ? "" : trim(value.subject);
                                           modified_date = (value.modified_date === undefined || value.modified_date == null) ? "" : trim(value.modified_date);
                                           note = (value.note === undefined || value.note == null) ? "" : trim(value.note);

                                           f = $("<li/>");
                                           e = (subject == "" ? "" : "<h4>" + subject + "</h4>");
                                           k = (modified_date == "" ? "" : "<p>" + modified_date + "</p>");
                                           m = (note == "" ? "" : "<p>" + note + "</p>");
                                           d = $("<a/>", {
                                               href: "#",
                                               "data-identity": value.id,
                                               click: function () {
                                                   CurrentNoteId = $(this).data("identity");
                                                   $.mobile.changePage("#ViewNoteDetailsPage");
                                                   $.mobile.pageLoading();
                                                   CiviCRMGetNoteDetails(CurrentNoteId);
                                               }
                                           });
                                           d.append(e);
                                           d.append(k);
                                           d.append(m);
                                           f.append(d);
                                           $(".ui-page-active ul.NotesListUl").append(f)
                                       }
                                   });

                                   $(".ui-page-active ul.NotesListUl").listview("refresh");
                               }
                           }
                       } else {
                           alert("An unexpected error occurred.");
                       }
                       $.mobile.hidePageLoadingMsg();
                   }
               });
}

function CiviCRMGetNoteDetails(note_id)
{
    $.mobile.showPageLoadingMsg();
    $().crmRESTAPI('note', 'get',
               {
                   id: note_id,
                   api_key: API_KEY,
                   key: CiviSessionId
               },
               {
                   ajaxURL: SERVER_REST_URL,
                   success: function(result, settings)
                   {
                       if (result)
                       {
                           if (result.is_error == 0)
                           {
                               if (result.values != undefined && result.values != null)
                               {
                                   a = result.values[result.id];
                                   subject = (a.subject === undefined || a.subject == null) ? "" : trim(a.subject);
                                   modified_date = (a.modified_date === undefined || a.modified_date == null) ? "" : trim(a.modified_date);
                                   note = (a.note === undefined || a.note == null) ? "" : trim(a.note);
                                   $("#NoteSubjectH1").text(subject);
                                   $("#NoteCreatedAt").text(modified_date);
                                   if (a.privacy !== undefined && a.privacy != "1")
                                   {
                                       $("#NotePublicLabel").show();
                                   } else
                                   {
                                       $("#NotePublicLabel").hide();
                                   }
                                   $("#NoteTextP").text(note);
                               }
                           }
                       } else
                       {
                           alert("An unexpected error occurred during sending data.");
                       }
                       $.mobile.hidePageLoadingMsg();
                   }
               });
}

function CiviCRMNewNoteDetails(entity_id, contact_id) {
    $("#EditNoteDetailsPageH1").val("New note");

    $("#NoteEditPageCiviCRMEntityId").val(entity_id);
    $("#NoteEditPageCiviCRMContactId").val(contact_id);

    $("#NoteEditPageCiviCRMSubject").val("");
    $("#NoteEditPageCiviCRMIsPublic").attr("checked", false).checkboxradio("refresh");
    $("#NoteEditPageCiviCRMText").val("");
}

function CiviCRMEditNoteDetails(note_id)
{

        $("#EditNoteDetailsPageH1").val("Edit note");
        $.mobile.showPageLoadingMsg();
        $().crmRESTAPI('note', 'get',
               {
                   id: note_id,
                   api_key: API_KEY,
                   key: CiviSessionId
               },
               {
                   ajaxURL: SERVER_REST_URL,
                   success: function(result, settings)
                   {
                       if (result)
                       {
                           if (result.is_error == 0)
                           {
                               if (result.values != undefined && result.values != null)
                               {
                                   a = result.values[result.id];
                                   $("#NoteEditPageCiviCRMEntityId").val(a.entity_id);
                                   $("#NoteEditPageCiviCRMContactId").val(a.contact_id);
                                   $("#NoteEditPageCiviCRMSubject").val(a.subject);
                                   $("#NoteEditPageCiviCRMIsPublic").attr("checked", a.privacy != '1').checkboxradio("refresh");
                                   $("#NoteEditPageCiviCRMText").val(a.note);
                               }
                           }
                       } else
                       {
                           alert("An unexpected error occurred during sending data.");
                       }
                       $.mobile.hidePageLoadingMsg();
                   }
               });
}

function CiviCRMUpdateNoteDetails()
{
    var noteEditPageCiviCRMEntityId = $("#NoteEditPageCiviCRMEntityId").val();
    var noteEditPageCiviCRMContactId = $("#NoteEditPageCiviCRMContactId").val();
    var noteEditPageCiviCRMSubject = $("#NoteEditPageCiviCRMSubject").val();
    var noteEditPageCiviCRMText = $("#NoteEditPageCiviCRMText").val();
    var noteEditPageCiviCRMIsPublic = $("#NoteEditPageCiviCRMIsPublic").is(":checked");

    if (trim(noteEditPageCiviCRMText) == "")
    {
        alert("Note text is mandatory");
        return;
    }
    
    $.mobile.showPageLoadingMsg();

    var params = {
        entity_table: "civicrm_contact",
        entity_id: noteEditPageCiviCRMEntityId,
        contact_id: noteEditPageCiviCRMContactId,
        subject: noteEditPageCiviCRMSubject,
        note: noteEditPageCiviCRMText,
        privacy: noteEditPageCiviCRMIsPublic ? "0" : "1",

        api_key: API_KEY,
        key: CiviSessionId
    };
    if (CurrentNoteId != null && CurrentNoteId != "")
    {
        params = $.extend({}, params, { id: CurrentNoteId });
    }
    $().crmRESTAPI_POST('note', 'create',
               params,
               {
                   ajaxURL: SERVER_REST_URL,
                   contact_id: noteEditPageCiviCRMEntityId,
                   success: function(result, settings)
                   {
                       if (result)
                       {
                           if (result.is_error == 0)
                           {
                               NeedToReloadContactId = settings.contact_id;
                               $(".ui-page-active a[data-rel=back]").trigger("click");

                           }
                       } else
                       {
                           alert("An unexpected error occurred during requesting data.");
                       }
                       $.mobile.hidePageLoadingMsg();
                   }
               });
}

/* =========== Contact Relationships =========== */
function getContactRelatedRelationshipsInsetList(contactId) {

    $(".ui-page-active ul.RelationshipsListUl li").remove();

    //$(".ui-page-active ul.NotesListUl").append('<li data-role="list-divider" data-icon="plus" data-theme="b"><a href="#EditNoteDetailsPage" id="addNote" data-role="button" data-icon="plus" data-inline="true" data-mini="true" data-iconpos="right">Notes</a></li>');
    //$(".ui-page-active ul.NotesListUl").append('<li data-role="list-divider" role="heading" data-icon="plus" data-theme="b">Notes<a href="#EditNoteDetailsPage" style="width: 30px; display:inline; float:right;" id="addNote" data-role="button" data-icon="plus" data-mini="true" data-iconpos="right">&nbsp;</a></li>');
    //$(".ui-page-active ul.NotesListUl").append('<li data-role="list-divider" role="heading" data-icon="plus" data-theme="b"><span><span style="text-align: left;">Notes</span><a href="#EditNoteDetailsPage" id="addNote" style="float: right; color: #FFFFFF; " data-role="button" data-icon="plus" data-inline="true" data-iconpos="right" data-mini="true">Add</a></span></li>');
    $(".ui-page-active ul.RelationshipsListUl").append('<li data-role="list-divider" role="heading" data-icon="plus" data-theme="b"><div data-role="controlgroup" data-type="horizontal"><span style="text-align: left;">Relationships</span><a href="#EditRelationshipDetailsPage" id="addRelationship" style="float: right; color: #FFFFFF; text-decoration: none;" data-role="button" data-icon="plus" data-inline="true" data-iconpos="right" data-mini="true">Add</a></div></li>');

    CurrentRelationshipId = "";

    $().crmRESTAPI('relationship', 'get',
               {
                   contact_id: contactId,
                   api_key: API_KEY,
                   key: CiviSessionId
               },
               {
                   ajaxURL: SERVER_REST_URL,
                   success: function (result, settings) {
                       if (result) {
                           if (result.is_error == 0) {
                               if (result.values != undefined) {
                                   $.each(result.values, function (index, value) {
                                       if (typeof value == 'object') {
                                           f = $("<li/>");
                                           relation = value.relation == null ? "[unknown relation]" : value.relation;
                                           relationSubject = value.name == null ? "[unknown]" : value.name;
                                           activeString = value.is_active == "1" ? "" : "<strong>Disabled</strong>";
                                           fromString = value.start_date ? " from " + value.start_date : "";
                                           tillString = value.end_date ? " till " + value.end_date : "";
                                           e = "<h4>" + relation + " " + relationSubject + "</h4>";
                                           k = "<p>" + activeString + fromString + tillString + "</p>";
                                           if (value.rtype == "a_b") {
                                               relationshipContactId = value.contact_id_b;
                                           } else {
                                               relationshipContactId = value.contact_id_a;
                                           }

                                           d = $("<a/>", {
                                               href: "#",
                                               "data-identity": relationshipContactId,
                                               click: function () {
                                                   CurrentRelationshipId = $(this).data("identity");
                                                   $.mobile.changePage("#ViewContactDetailsPage");
                                                   $.mobile.pageLoading();
                                                   CiviCRMGetContactDetails($(this).data("identity"));
                                               }
                                           });
                                           d.append(e);
                                           d.append(k);
                                           f.append(d);
                                           $(".ui-page-active ul.RelationshipsListUl").append(f)
                                       }
                                   });

                                   $(".ui-page-active ul.RelationshipsListUl").listview("refresh");
                               }
                           }
                       } else {
                           alert("An unexpected error occurred.");
                       }
                       $.mobile.hidePageLoadingMsg();
                   }
               });
}

function CiviCRMGetRelationshipDetails() {
    $.mobile.showPageLoadingMsg();
    $().crmRESTAPI('relationship', 'get',
               {
                   id: CurrentRelationshipId,
                   api_key: API_KEY,
                   key: CiviSessionId
               },
               {
                   ajaxURL: SERVER_REST_URL,
                   success: function (result, settings) {
                       if (result) {
                           if (result.is_error == 0) {
                               if (result.values != undefined && result.values != null) {
                                   a = result.values[result.id];
                                   $("#NoteSubjectH1").val(a.subject);
                                   $("#NoteCreatedAt").val(a.modified_date);
                                   if (a.privacy !== undefined && a.privacy != "1") {
                                       $("#NotePublicLabel").show();
                                   } else {
                                       $("#NotePublicLabel").hide();
                                   }
                                   $("#NoteTextP").val(a.note);
                               }
                           }
                       } else {
                           alert("An unexpected error occurred during sending data.");
                       }
                       $.mobile.hidePageLoadingMsg();
                   }
               });
}

function CiviCRMEditRelationshipDetails() {

    if (CurrentRelationshipId == null || CurrentRelationshipId == "") {
        $("#EditRelationshipDetailsPageH1").val("New relationship");

        $("#NoteEditPageCiviCRMSubject").val("");
        $("#NoteEditPageCiviCRMIsPublic").attr("checked", false).checkboxradio("refresh");
        $("#NoteEditPageCiviCRMText").val("");

    } else {
        $("#EditRelationshipDetailsPageH1").val("Edit relationship");
        $.mobile.showPageLoadingMsg();
        $().crmRESTAPI('relationship', 'get',
               {
                   id: CurrentRelationshipId,
                   api_key: API_KEY,
                   key: CiviSessionId
               },
               {
                   ajaxURL: SERVER_REST_URL,
                   success: function (result, settings) {
                       if (result) {
                           if (result.is_error == 0) {
                               if (result.values != undefined && result.values != null) {
                                   a = result.values[result.id];
                                   $("#NoteEditPageCiviCRMSubject").val(a.subject);
                                   $("#NoteEditPageCiviCRMIsPublic").attr("checked", a.privacy != '1').checkboxradio("refresh");
                                   $("#NoteEditPageCiviCRMText").val(a.note);
                               }
                           }
                       } else {
                           alert("An unexpected error occurred during sending data.");
                       }
                       $.mobile.hidePageLoadingMsg();
                   }
               });
    }
}

function CiviCRMUpdateRelationshipDetails() {
    $.mobile.showPageLoadingMsg();

    var noteEditPageCiviCRMSubject = $("#NoteEditPageCiviCRMSubject").val();
    var noteEditPageCiviCRMText = $("#NoteEditPageCiviCRMText").val();
    var noteEditPageCiviCRMIsPublic = $("#NoteEditPageCiviCRMIsPublic").is(":checked");

    var params = {
        entity_table: "civicrm_contact",
        entity_id: CurrentContactId,
        contact_id: LoggedContactId,
        subject: noteEditPageCiviCRMSubject,
        note: noteEditPageCiviCRMText,
        privacy: noteEditPageCiviCRMIsPublic ? "0" : "1",

        api_key: API_KEY,
        key: CiviSessionId
    };
    if (CurrentRelationshipId != null && CurrentRelationshipId != "") {
        params = $.extend({}, params, { id: CurrentRelationshipId });
    }
    $().crmRESTAPI_POST('relationship', 'create',
               params,
               {
                   ajaxURL: SERVER_REST_URL,
                   success: function (result, settings) {
                       if (result) {
                           if (result.is_error == 0) {
                               NeedToReloadContactId = CurrentContactId;
                               $(".ui-page-active a[data-rel=back]").trigger("click");

                           }
                       } else {
                           alert("An unexpected error occurred during requesting data.");
                       }
                       $.mobile.hidePageLoadingMsg();
                   }
               });
           }




function getContactRelatedOpportunitiesInsetList()
{
    $("#ViewContactDetailsPageOpportunitiesListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Contacts","module_id":"' + CurrentContactId + '","link_field_name":"opportunities","related_module_query":"","related_fields":["id","name","sales_stage"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewContactDetailsPageOpportunitiesListUl").append('<li data-role="list-divider">Opportunities</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<h4>" + b.name_value_list.name.value + "</h4>",
					e = "<p>" + b.name_value_list.sales_stage.value + "</p>";
	                b = $("<a/>", {
	                    href: "#",
	                    "data-identity": b.id,
	                    click: function()
	                    {
	                        CurrentOpportunityId = $(this).data("identity");
	                        $.mobile.changePage("#ViewOpportunityDetailsPage");
	                        $.mobile.pageLoading();
	                        CiviCRMGetOpportunityDetails()
	                    }
	                });
	                b.append(f);
	                b.append(e);
	                d.append(b);
	                $("#ViewContactDetailsPageOpportunitiesListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewContactDetailsPageOpportunitiesListUl").append(a)
	        }
	        $("#ViewContactDetailsPageOpportunitiesListUl").listview("refresh")
	    }
	})
}
function getContactRelatedLeadsInsetList()
{
    $("#ViewContactDetailsPageLeadsListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Contacts","module_id":"' + CurrentContactId + '","link_field_name":"leads","related_module_query":"","related_fields":["id","first_name","last_name","title"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewContactDetailsPageLeadsListUl").append('<li data-role="list-divider">Leads</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<h4>" + b.name_value_list.first_name.value + " " + b.name_value_list.last_name.value + "</h4>",
					e = "";
	                e = b.name_value_list.title != undefined ? "<p>" + b.name_value_list.title.value + "</p>" : "<p></p>";
	                b = $("<a/>", {
	                    href: "#",
	                    "data-identity": b.id,
	                    click: function()
	                    {
	                        CurrentLeadId = $(this).data("identity");
	                        $.mobile.changePage("#ViewLeadDetailsPage");
	                        $.mobile.pageLoading();
	                        CiviCRMGetLeadDetails()
	                    }
	                });
	                b.append(f);
	                b.append(e);
	                d.append(b);
	                $("#ViewContactDetailsPageLeadsListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewContactDetailsPageLeadsListUl").append(a)
	        }
	        $("#ViewContactDetailsPageLeadsListUl").listview("refresh")
	    }
	})
}
function getContactRelatedCallsInsetList()
{
    $("#ViewContactDetailsPageCallsListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Contacts","module_id":"' + CurrentContactId + '","link_field_name":"calls","related_module_query":"","related_fields":["id","name","status","date_start"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewContactDetailsPageCallsListUl").append('<li data-role="list-divider">Calls</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a !== undefined && a.entry_list !== undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] !== undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<h4>" + b.name_value_list.name.value + "</h4>",
					e = "";
	                if (b.name_value_list.status !== undefined && b.name_value_list.status.value !== "")
	                {
	                    e = "<p>" + b.name_value_list.status.value;
	                    if (b.name_value_list.date_start != undefined) e += "<br/>" + b.name_value_list.date_start.value;
	                    e += "</p>"
	                } else e = "<p></p>";
	                var m = $("<a/>", {
	                    href: "#",
	                    "data-identity": b.id,
	                    click: function()
	                    {
	                        CurrentCallId = $(this).data("identity");
	                        $.mobile.changePage("#ViewCallDetailsPage");
	                        $.mobile.pageLoading();
	                        CiviCRMGetCallDetails()
	                    }
	                });
	                m.append(f);
	                b.name_value_list.status !== undefined && b.name_value_list.status.value !== "" && m.append(e);
	                d.append(m);
	                $("#ViewContactDetailsPageCallsListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewContactDetailsPageCallsListUl").append(a)
	        }
	        $("#ViewContactDetailsPageCallsListUl").listview("refresh")
	    }
	})
}
function getContactRelatedMeetingsInsetList()
{
    $("#ViewContactDetailsPageMeetingsListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Contacts","module_id":"' + CurrentContactId + '","link_field_name":"meetings","related_module_query":"","related_fields":["id","name","status","date_start"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewContactDetailsPageMeetingsListUl").append('<li data-role="list-divider">Meetings</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<h4>" + b.name_value_list.name.value + "</h4>",
					e = "";
	                if (b.name_value_list.status != undefined)
	                {
	                    e = "<p>" + b.name_value_list.status.value;
	                    if (b.name_value_list.date_start != undefined) e += "<br/>" + b.name_value_list.date_start.value;
	                    e += "</p>"
	                } else e = "<p></p>";
	                b = $("<a/>", {
	                    href: "#",
	                    "data-identity": b.id,
	                    click: function()
	                    {
	                        CurrentMeetingId = $(this).data("identity");
	                        $.mobile.changePage("#ViewMeetingDetailsPage");
	                        $.mobile.pageLoading();
	                        CiviCRMGetMeetingDetails()
	                    }
	                });
	                b.append(f);
	                b.append(e);
	                d.append(b);
	                $("#ViewContactDetailsPageMeetingsListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewContactDetailsPageMeetingsListUl").append(a)
	        }
	        $("#ViewContactDetailsPageMeetingsListUl").listview("refresh")
	    }
	    $.mobile.pageLoading(true)
	})
}
function getContactRelatedTasksInsetList()
{
    $("#ViewContactDetailsPageTasksListUl li").remove();
    CiviSessionId == "" && $.mobile.changePage("#HomePage");
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Contacts","module_id":"' + CurrentContactId + '","link_field_name":"tasks","related_module_query":"","related_fields":["id","name","status","date_start"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewContactDetailsPageTasksListUl").append('<li data-role="list-divider">Tasks</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<h4>" + b.name_value_list.name.value + "</h4>",
					e = "";
	                if (b.name_value_list.status != undefined)
	                {
	                    e = "<p>" + b.name_value_list.status.value;
	                    if (b.name_value_list.date_start != undefined) e += "<br/>" + b.name_value_list.date_start.value;
	                    e += "</p>"
	                } else e = "<p></p>";
	                b = $("<a/>", {
	                    href: "#",
	                    "data-identity": b.id,
	                    click: function()
	                    {
	                        CurrentTaskId = $(this).data("identity");
	                        $.mobile.changePage("#ViewTaskDetailsPage");
	                        $.mobile.pageLoading();
	                        CiviCRMGetTaskDetails()
	                    }
	                });
	                b.append(f);
	                b.append(e);
	                d.append(b);
	                $("#ViewContactDetailsPageTasksListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewContactDetailsPageTasksListUl").append(a)
	        }
	        $("#ViewContactDetailsPageTasksListUl").listview("refresh")
	    }
	    $.mobile.pageLoading(true)
	})
}
function CiviCRMGetOpportunitiesListFromServer(a)
{
    if ($("#AllOpportunitiesListDiv li").length === 0 || OpportunitiesListCurrentOffset !== a)
    {
        $.mobile.pageLoading();
        OpportunitiesListCurrentOffset = a;
        $.get(SERVER_REST_URL, {
            method: "get_entry_list",
            input_type: "JSON",
            response_type: "JSON",
            rest_data: '{"session":"' + CiviSessionId + '","module_name":"Opportunities","query":"","order_by":"amount desc","offset":' + a + ',"select_fields":"","link_name_to_fields_array":"","max_results":' + RowsPerPageInListViews + ',"deleted":0}'
        },
		function(c)
		{
		    if (c != undefined)
		    {
		        c = jQuery.parseJSON(c);
		        if (c.name !== undefined && c.name === "Invalid Session ID")
		        {
		            CiviSessionId = "";
		            $.mobile.changePage("#LoginPage")
		        }
		        if (c != undefined && c.entry_list != undefined)
		        {
		            if (c.result_count === 0) OpportunitiesListCurrentOffset = OpportunitiesListPrevOffset + RowsPerPageInListViews;
		            else if (c.next_offset === 0) OpportunitiesListCurrentOffset = 0;
		            if (c.next_offset == 0 || c.result_count == 0) alert("There are no more records in that direction");
		            else
		            {
		                $("#AllOpportunitiesListDiv li").remove();
		                var b = 0;
		                for (b = 0; b <= c.entry_list.length; b++) if (c.entry_list[b] != undefined)
		                {
		                    var d = c.entry_list[b],
							f = $("<li/>"),
							e = "<h4>" + d.name_value_list.name.value + "</h4>",
							m = $("<p/>");
		                    if (d.name_value_list.amount !== undefined && d.name_value_list.amount.value !== "") if (d.name_value_list.currency_name !== undefined && d.name_value_list.currency_name.value !== "")
		                    {
		                        m.append(d.name_value_list.currency_symbol.value);
		                        m.append(parseFloat(d.name_value_list.amount.value).toFixed(2))
		                    } else
		                    {
		                        m.append("$");
		                        m.append(parseFloat(d.name_value_list.amount_usdollar.value).toFixed(2))
		                    }
		                    d.name_value_list.sales_stage !== undefined && d.name_value_list.sales_stage.value !== "" && m.append(" - " + d.name_value_list.sales_stage.value);
		                    d = $("<a/>", {
		                        href: "#",
		                        "data-identity": d.id,
		                        click: function()
		                        {
		                            CurrentOpportunityId = $(this).data("identity");
		                            $.mobile.changePage("#ViewOpportunityDetailsPage");
		                            $.mobile.pageLoading();
		                            CiviCRMGetOpportunityDetails()
		                        }
		                    });
		                    d.append(e);
		                    d.append(m);
		                    f.append(d);
		                    $("#AllOpportunitiesListDiv").append(f)
		                }
		                $("#AllOpportunitiesListDiv").listview("refresh");
		                OpportunitiesListNextOffset = c.next_offset;
		                OpportunitiesListPrevOffset = a - RowsPerPageInListViews
		            }
		        }
		    }
		    $.mobile.pageLoading(true)
		})
    }
}
function CiviCRMGetOpportunityDetails()
{
    $.mobile.pageLoading();
    $("#OpportunityNameH1").html("");
    $("#OpportunityDescriptionP").text("");
    $("#ViewOpportunityDetailsPageDetailsList li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_entry",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Opportunities","id":"' + CurrentOpportunityId + '","select_fields":"","link_name_to_fields_array":""}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list[0] != undefined)
	        {
	            a = a.entry_list[0];
	            $("#OpportunityNameH1").html(a.name_value_list.name.value);
	            $("#OpportunityDescriptionP").text(a.name_value_list.account_name.value);
	            $("#ViewOpportunityDetailsPageDetailsList").append('<li data-role="list-divider">Opportunity Information</li>');
	            if (a.name_value_list.amount !== undefined && a.name_value_list.amount.value !== "")
	            {
	                var c = $("<li/>"),
					b = $("<p/>");
	                b.append("<br />Opportunity Amount (");
	                var d = $("<h4/>");
	                if (a.name_value_list.currency_name !== undefined && a.name_value_list.currency_name.value !== "")
	                {
	                    b.append(a.name_value_list.currency_name.value + ")");
	                    d.append(a.name_value_list.currency_symbol.value);
	                    d.append(parseFloat(a.name_value_list.amount.value).toFixed(2))
	                } else
	                {
	                    b.append("USD)");
	                    d.append("$");
	                    d.append(parseFloat(a.name_value_list.amount_usdollar.value).toFixed(2))
	                }
	                b.append(d);
	                c.append(b);
	                c.append(d);
	                $("#ViewOpportunityDetailsPageDetailsList").append(c)
	            }
	            a.name_value_list.date_closed !== undefined && a.name_value_list.date_closed.value !== "" && $("#ViewOpportunityDetailsPageDetailsList").append("<li><p><br />Expected Close Date</p><h4>" + a.name_value_list.date_closed.value + "</h4></li>");
	            a.name_value_list.sales_stage !== undefined && a.name_value_list.sales_stage.value !== "" && $("#ViewOpportunityDetailsPageDetailsList").append("<li><p><br />Sales Stage</p><h4>" + a.name_value_list.sales_stage.value + "</h4></li>");
	            a.name_value_list.opportunity_type !== undefined && a.name_value_list.opportunity_type.value !== "" && $("#ViewOpportunityDetailsPageDetailsList").append("<li><p><br />Type</p><h4>" + a.name_value_list.opportunity_type.value + "</h4></li>");
	            a.name_value_list.probability !== undefined && a.name_value_list.probability.value !== "" && $("#ViewOpportunityDetailsPageDetailsList").append("<li><p><br />Probability(%)</p><h4>" + a.name_value_list.probability.value + "</h4></li>");
	            a.name_value_list.lead_source !== undefined && a.name_value_list.lead_source.value !== "" && $("#ViewOpportunityDetailsPageDetailsList").append("<li><p><br />Lead Source</p><h4>" + a.name_value_list.lead_source.value + "</h4></li>");
	            a.name_value_list.next_step !== undefined && a.name_value_list.next_step.value !== "" && $("#ViewOpportunityDetailsPageDetailsList").append("<li><p><br />Next Step</p><h4>" + a.name_value_list.next_step.value + "</h4></li>");
	            a.name_value_list.description !== undefined && a.name_value_list.description.value !== "" && $("#ViewOpportunityDetailsPageDetailsList").append("<li><p><br />Description</p><h4>" + a.name_value_list.description.value + "</h4></li>");
	            $("#ViewOpportunityDetailsPageDetailsList").append('<li data-role="list-divider">Opportunity Information</li>');
	            a.name_value_list.assigned_user_name !== undefined && a.name_value_list.assigned_user_name.value !== "" && $("#ViewOpportunityDetailsPageDetailsList").append("<li><p><br />Assigned To</p><h4>" + a.name_value_list.assigned_user_name.value + "</h4></li>");
	            a.name_value_list.date_modified !== undefined && a.name_value_list.date_modified.value !== "" && $("#ViewOpportunityDetailsPageDetailsList").append("<li><p><br />Date Modified</p><h4>" + a.name_value_list.date_modified.value + "</h4></li>");
	            a.name_value_list.date_entered !== undefined && a.name_value_list.date_entered.value !== "" && $("#ViewOpportunityDetailsPageDetailsList").append("<li><p><br />Date Created</p><h4>" + a.name_value_list.date_entered.value + " by " + a.name_value_list.created_by_name.value + "</h4></li>")
	        }
	        $("#ViewOpportunityDetailsPageDetailsList").listview("refresh")
	    }
	});
    getOpportunityRelatedContactsInsetList();
    getOpportunityRelatedLeadsInsetList();
    getOpportunityRelatedCallsInsetList();
    getOpportunityRelatedMeetingsInsetList();
    getOpportunityRelatedTasksInsetList()
}
function getOpportunityRelatedContactsInsetList()
{
    $.mobile.pageLoading();
    $("#ViewOpportunityDetailsPageContactsListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Opportunities","module_id":"' + CurrentOpportunityId + '","link_field_name":"contacts","related_module_query":"","related_fields":["id","first_name","last_name","title"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewOpportunityDetailsPageContactsListUl li").remove();
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined)
	        {
	            $("#ViewOpportunityDetailsPageContactsListUl").append('<li data-role="list-divider">Contacts</li>');
	            if (a.entry_list.length > 0)
	            {
	                var c = 0;
	                for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	                {
	                    var b = a.entry_list[c],
						d = $("<li/>"),
						f = '<h4 class="contactName">' + b.name_value_list.first_name.value + "&nbsp;" + b.name_value_list.last_name.value + "</h4>",
						e = "<p>" + b.name_value_list.title.value + "</p>";
	                    b = $("<a/>", {
	                        href: "#",
	                        "data-identity": b.id,
	                        click: function()
	                        {
	                            CurrentContactId = $(this).data("identity");
	                            $.mobile.changePage("#ViewContactDetailsPage");
	                            $.mobile.pageLoading();
	                            CiviCRMGetContactDetails()
	                        }
	                    });
	                    b.append(f);
	                    b.append(e);
	                    d.append(b);
	                    $("#ViewOpportunityDetailsPageContactsListUl").append(d)
	                }
	            } else
	            {
	                a = $("<li/>");
	                a.append("<h4>No Data</h4>");
	                $("#ViewOpportunityDetailsPageContactsListUl").append(a)
	            }
	        }
	        $("#ViewOpportunityDetailsPageContactsListUl").listview("refresh")
	    }
	    $.mobile.pageLoading(true)
	})
}
function getOpportunityRelatedLeadsInsetList()
{
    $.mobile.pageLoading();
    $("#ViewOpportunityDetailsPageLeadsListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Opportunities","module_id":"' + CurrentOpportunityId + '","link_field_name":"leads","related_module_query":"","related_fields":["id","first_name","last_name","title"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined)
	        {
	            $("#ViewOpportunityDetailsPageLeadsListUl").append('<li data-role="list-divider">Leads</li>');
	            if (a.entry_list.length > 0)
	            {
	                var c = 0;
	                for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	                {
	                    var b = a.entry_list[c],
						d = $("<li/>"),
						f = "<h4>" + b.name_value_list.first_name.value + " " + b.name_value_list.last_name.value + "</h4>",
						e = "";
	                    e = b.name_value_list.title != undefined ? "<p>" + b.name_value_list.title.value + "</p>" : "<p></p>";
	                    b = $("<a/>", {
	                        href: "#",
	                        "data-identity": b.id,
	                        click: function()
	                        {
	                            CurrentLeadId = $(this).data("identity");
	                            $.mobile.changePage("#ViewLeadDetailsPage");
	                            $.mobile.pageLoading();
	                            CiviCRMGetLeadDetails()
	                        }
	                    });
	                    b.append(f);
	                    b.append(e);
	                    d.append(b);
	                    $("#ViewOpportunityDetailsPageLeadsListUl").append(d)
	                }
	            } else
	            {
	                a = $("<li/>");
	                a.append("<h4>No Data</h4>");
	                $("#ViewOpportunityDetailsPageLeadsListUl").append(a)
	            }
	        }
	        $("#ViewOpportunityDetailsPageLeadsListUl").listview("refresh")
	    }
	    $.mobile.pageLoading(true)
	})
}
function getOpportunityRelatedCallsInsetList()
{
    $.mobile.pageLoading();
    $("#ViewOpportunityDetailsPageCallsListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Opportunities","module_id":"' + CurrentOpportunityId + '","link_field_name":"calls","related_module_query":"","related_fields":["id","name","status","date_start"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined)
	        {
	            $("#ViewOpportunityDetailsPageCallsListUl").append('<li data-role="list-divider">Calls</li>');
	            if (a.entry_list.length > 0)
	            {
	                var c = 0;
	                for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	                {
	                    var b = a.entry_list[c],
						d = $("<li/>"),
						f = "<h4>" + b.name_value_list.name.value + "</h4>",
						e = "";
	                    if (b.name_value_list.status != undefined)
	                    {
	                        e = "<p>" + b.name_value_list.status.value;
	                        if (b.name_value_list.date_start != undefined) e += "<br/>" + b.name_value_list.date_start.value;
	                        e += "</p>"
	                    } else e = "<p></p>";
	                    var m = $("<a/>", {
	                        href: "#",
	                        "data-identity": b.id,
	                        click: function()
	                        {
	                            CurrentCallId = $(this).data("identity");
	                            $.mobile.changePage("#ViewCallDetailsPage");
	                            $.mobile.pageLoading();
	                            CiviCRMGetCallDetails()
	                        }
	                    });
	                    m.append(f);
	                    b.name_value_list.status != undefined && m.append(e);
	                    d.append(m);
	                    $("#ViewOpportunityDetailsPageCallsListUl").append(d)
	                }
	            } else
	            {
	                a = $("<li/>");
	                a.append("<h4>No Data</h4>");
	                $("#ViewOpportunityDetailsPageCallsListUl").append(a)
	            }
	        }
	        $("#ViewOpportunityDetailsPageCallsListUl").listview("refresh")
	    }
	    $.mobile.pageLoading(true)
	})
}
function getOpportunityRelatedMeetingsInsetList()
{
    $.mobile.pageLoading();
    $("#ViewOpportunityDetailsPageMeetingsListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Opportunities","module_id":"' + CurrentOpportunityId + '","link_field_name":"meetings","related_module_query":"","related_fields":["id","name","status","date_start"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewOpportunityDetailsPageMeetingsListUl li").remove();
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined)
	        {
	            $("#ViewOpportunityDetailsPageMeetingsListUl").append('<li data-role="list-divider">Meetings</li>');
	            if (a.entry_list.length > 0)
	            {
	                var c = 0;
	                for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	                {
	                    var b = a.entry_list[c],
						d = $("<li/>"),
						f = "<h4>" + b.name_value_list.name.value + "</h4>",
						e = "";
	                    if (b.name_value_list.status != undefined)
	                    {
	                        e = "<p>" + b.name_value_list.status.value;
	                        if (b.name_value_list.date_start != undefined) e += "<br/>" + b.name_value_list.date_start.value;
	                        e += "</p>"
	                    } else e = "<p></p>";
	                    b = $("<a/>", {
	                        href: "#",
	                        "data-identity": b.id,
	                        click: function()
	                        {
	                            CurrentMeetingId = $(this).data("identity");
	                            $.mobile.changePage("#ViewMeetingDetailsPage");
	                            $.mobile.pageLoading();
	                            CiviCRMGetMeetingDetails()
	                        }
	                    });
	                    b.append(f);
	                    b.append(e);
	                    d.append(b);
	                    $("#ViewOpportunityDetailsPageMeetingsListUl").append(d)
	                }
	            } else
	            {
	                a = $("<li/>");
	                a.append("<h4>No Data</h4>");
	                $("#ViewOpportunityDetailsPageMeetingsListUl").append(a)
	            }
	        }
	        $("#ViewOpportunityDetailsPageMeetingsListUl").listview("refresh")
	    }
	    $.mobile.pageLoading(true)
	})
}
function getOpportunityRelatedTasksInsetList()
{
    $.mobile.pageLoading();
    $("#ViewOpportunityDetailsPageTasksListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Opportunities","module_id":"' + CurrentOpportunityId + '","link_field_name":"tasks","related_module_query":"","related_fields":["id","name","status","date_start"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewOpportunityDetailsPageTasksListUl li").remove();
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined)
	        {
	            $("#ViewOpportunityDetailsPageTasksListUl").append('<li data-role="list-divider">Tasks</li>');
	            if (a.entry_list.length > 0)
	            {
	                var c = 0;
	                for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	                {
	                    var b = a.entry_list[c],
						d = $("<li/>"),
						f = "<h4>" + b.name_value_list.name.value + "</h4>",
						e = "";
	                    if (b.name_value_list.status != undefined)
	                    {
	                        e = "<p>" + b.name_value_list.status.value;
	                        if (b.name_value_list.date_start != undefined) e += "<br/>" + b.name_value_list.date_start.value;
	                        e += "</p>"
	                    } else e = "<p></p>";
	                    b = $("<a/>", {
	                        href: "#",
	                        "data-identity": b.id,
	                        click: function()
	                        {
	                            CurrentTaskId = $(this).data("identity");
	                            $.mobile.changePage("#ViewTaskDetailsPage");
	                            $.mobile.pageLoading();
	                            CiviCRMGetTaskDetails()
	                        }
	                    });
	                    b.append(f);
	                    b.append(e);
	                    d.append(b);
	                    $("#ViewOpportunityDetailsPageTasksListUl").append(d)
	                }
	            } else
	            {
	                a = $("<li/>");
	                a.append("<h4>No Data</h4>");
	                $("#ViewOpportunityDetailsPageTasksListUl").append(a)
	            }
	        }
	        $("#ViewOpportunityDetailsPageTasksListUl").listview("refresh")
	    }
	    $.mobile.pageLoading(true)
	})
}
function CiviCRMGetLeadsListFromServer(a)
{
    if ($("#AllLeadsListDiv li").length === 0 || LeadsListCurrentOffset !== a)
    {
        $.mobile.pageLoading();
        LeadsListCurrentOffset = a;
        $.get(SERVER_REST_URL, {
            method: "get_entry_list",
            input_type: "JSON",
            response_type: "JSON",
            rest_data: '{"session":"' + CiviSessionId + '","module_name":"Leads","query":"","order_by":"name","offset":' + a + ',"select_fields":"","link_name_to_fields_array":"","max_results":' + RowsPerPageInListViews + ',"deleted":0}'
        },
		function(c)
		{
		    if (c != undefined)
		    {
		        c = jQuery.parseJSON(c);
		        if (c.name !== undefined && c.name === "Invalid Session ID")
		        {
		            CiviSessionId = "";
		            $.mobile.changePage("#LoginPage")
		        }
		        if (c != undefined && c.entry_list != undefined)
		        {
		            if (c.result_count === 0) LeadsListCurrentOffset = LeadsListPrevOffset + RowsPerPageInListViews;
		            else if (c.next_offset === 0) LeadsListCurrentOffset = 0;
		            if (c.next_offset == 0 || c.result_count == 0) alert("There are no more records in that direction");
		            else
		            {
		                $("#AllLeadsListDiv li").remove();
		                var b = 0;
		                for (b = 0; b <= c.entry_list.length; b++) if (c.entry_list[b] != undefined)
		                {
		                    var d = c.entry_list[b],
							f = $("<li/>"),
							e = "<h4>" + d.name_value_list.first_name.value + "&nbsp;" + d.name_value_list.last_name.value + "</h4>",
							m = "<p>" + d.name_value_list.title.value + " at&nbsp;" + d.name_value_list.account_name.value + "</p>";
		                    d = $("<a/>", {
		                        href: "#",
		                        "data-identity": d.id,
		                        click: function()
		                        {
		                            CurrentLeadId = $(this).data("identity");
		                            $.mobile.changePage("#ViewLeadDetailsPage");
		                            $.mobile.pageLoading();
		                            CiviCRMGetLeadDetails()
		                        }
		                    });
		                    d.append(e);
		                    d.append(m);
		                    f.append(d);
		                    $("#AllLeadsListDiv").append(f)
		                }
		                $("#AllLeadsListDiv").listview("refresh");
		                LeadsListNextOffset = c.next_offset;
		                LeadsListPrevOffset = a - RowsPerPageInListViews
		            }
		        }
		    }
		    $.mobile.pageLoading(true)
		})
    }
}
function CiviCRMGetLeadDetails()
{
    $("#ContactNameH1").html("");
    $("#ContactTitleP").text("");
    $("#ViewLeadDetailsPageDetailsList li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_entry",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Leads","id":"' + CurrentLeadId + '","select_fields":"","link_name_to_fields_array":""}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list[0] != undefined)
	        {
	            a = a.entry_list[0];
	            $("#LeadNameH1").html(a.name_value_list.first_name.value + "&nbsp;" + a.name_value_list.last_name.value);
	            if (a.name_value_list.account_name !== undefined && a.name_value_list.account_name.value !== "")
	            {
	                var c = a.name_value_list.title.value;
	                c += " at " + a.name_value_list.account_name.value;
	                $("#LeadTitleP").text(c)
	            }
	            $("#ViewLeadDetailsPageDetailsList").append('<li data-role="list-divider">Lead Information</li>');
	            if (a.name_value_list.phone_work !== undefined && a.name_value_list.phone_work.value !== "")
	            {
	                c = $("<li/>");
	                var b = a.name_value_list.phone_work.value.replace("(", "");
	                b = b.replace(")", "");
	                b = b.replace(" ", "");
	                b = b.replace("-", "");
	                var d = "<h4>" + a.name_value_list.phone_work.value + "</h4>";
	                b = $("<a/>", {
	                    href: "tel:+1" + b,
	                    rel: "external",
	                    style: "text-decoration:none;color:#444;"
	                });
	                b.append("<p><br />Office Phone</p>");
	                b.append(d);
	                c.append(b);
	                $("#ViewLeadDetailsPageDetailsList").append(c)
	            }
	            if (a.name_value_list.phone_mobile !== undefined && a.name_value_list.phone_mobile.value !== "")
	            {
	                c = $("<li/>");
	                b = a.name_value_list.phone_mobile.value.replace("(", "");
	                b = b.replace(")", "");
	                b = b.replace(" ", "");
	                b = b.replace("-", "");
	                d = "<h4>Mobile Phone:&nbsp;" + a.name_value_list.phone_mobile.value + "</h4>";
	                b = $("<a/>", {
	                    href: "tel:+1" + b,
	                    rel: "external",
	                    style: "text-decoration:none;color:#444;"
	                });
	                b.append("<p><br />Mobile Phone</p>");
	                b.append(d);
	                c.append(b);
	                $("#ViewLeadDetailsPageDetailsList").append(c)
	            }
	            if (a.name_value_list.phone_fax !== undefined && a.name_value_list.phone_fax.value !== "")
	            {
	                c = $("<li/>");
	                d = "<h4>" + a.name_value_list.phone_fax.value + "</h4>";
	                c.append("<p><br />Fax</p>");
	                c.append(d);
	                $("#ViewLeadDetailsPageDetailsList").append(c)
	            }
	            a.name_value_list.department !== undefined && a.name_value_list.department.value !== "" && $("#ViewLeadDetailsPageDetailsList").append("<li><p><br />Department</p><h4>" + a.name_value_list.department.value + "</h4></li>");
	            if (a.name_value_list.primary_address_street !== undefined && a.name_value_list.primary_address_street.value != "" || a.name_value_list.primary_address_city !== undefined && a.name_value_list.primary_address_city.value != "" || a.name_value_list.primary_address_state !== undefined && a.name_value_list.primary_address_state.value != "" || a.name_value_list.primary_address_postalcode !== undefined && a.name_value_list.primary_address_postalcode.value != "" || a.name_value_list.primary_address_country !== undefined && a.name_value_list.primary_address_country.value != "")
	            {
	                c = $("<li/>");
	                b = a.name_value_list.primary_address_street.value;
	                var f = a.name_value_list.primary_address_city.value,
					e = a.name_value_list.primary_address_state.value,
					m = a.name_value_list.primary_address_postalcode.value;
	                d = "<h4>" + b + "<br />" + f + ", " + e + m + "<br />" + a.name_value_list.primary_address_country.value + "</h4>";
	                b = $("<a/>", {
	                    href: "http://maps.google.com/?q=" + b + " " + f + " " + e + " " + m + "&t=m&z=13",
	                    rel: "external",
	                    target: "_new",
	                    style: "text-decoration:none;color:#444;"
	                });
	                b.append("<p><br />Primary Address</p>");
	                b.append(d);
	                c.append(b);
	                $("#ViewLeadDetailsPageDetailsList").append(c)
	            }
	            if (a.name_value_list.alt_address_street !== undefined && a.name_value_list.alt_address_street.value != "" || a.name_value_list.alt_address_city !== undefined && a.name_value_list.alt_address_city.value != "" || a.name_value_list.alt_address_state !== undefined && a.name_value_list.alt_address_state.value != "" || a.name_value_list.alt_address_postalcode !== undefined && a.name_value_list.alt_address_postalcode.value != "" || a.name_value_list.alt_address_country !== undefined && a.name_value_list.alt_address_country.value != "")
	            {
	                c = $("<li/>");
	                b = a.name_value_list.alt_address_street.value;
	                f = a.name_value_list.alt_address_city.value;
	                e = a.name_value_list.alt_address_state.value;
	                m = a.name_value_list.alt_address_postalcode.value;
	                d = "<h4>" + b + "<br />" + f + ", " + e + m + "<br />" + a.name_value_list.alt_address_country.value + "</h4>";
	                b = $("<a/>", {
	                    href: "http://maps.google.com/?q=" + b + " " + f + " " + e + " " + m + "&t=m&z=13",
	                    rel: "external",
	                    target: "_new",
	                    style: "text-decoration:none;color:#444;"
	                });
	                b.append("<p><br />Other Address</p>");
	                b.append(d);
	                c.append(b);
	                $("#ViewLeadDetailsPageDetailsList").append(c)
	            }
	            if (a.name_value_list.email1 !== undefined && a.name_value_list.email1.value !== "")
	            {
	                c = $("<li/>");
	                d = "<h4>" + a.name_value_list.email1.value + "</h4>";
	                b = $("<a/>", {
	                    href: "mailto:" + a.name_value_list.email1.value,
	                    rel: "external",
	                    style: "text-decoration:none;color:#444;"
	                });
	                b.append("<p><br />Email</p>");
	                b.append(d);
	                c.append(b);
	                $("#ViewLeadDetailsPageDetailsList").append(c)
	            }
	            a.name_value_list.description !== undefined && a.name_value_list.description.value !== "" && $("#ViewLeadDetailsPageDetailsList").append("<li><p><br />Description<p><h4>" + a.name_value_list.description.value + "</h4></li>");
	            $("#ViewLeadDetailsPageDetailsList").append('<li data-role="list-divider">More Information</li>');
	            a.name_value_list.status !== undefined && a.name_value_list.status.value !== "" && $("#ViewLeadDetailsPageDetailsList").append("<li><p><br />Status<p><h4>" + a.name_value_list.status.value + "</h4></li>");
	            a.name_value_list.lead_source !== undefined && a.name_value_list.lead_source.value !== "" && $("#ViewLeadDetailsPageDetailsList").append("<li><p><br />Source<p><h4>" + a.name_value_list.lead_source.value + "</h4></li>");
	            a.name_value_list.status_description !== undefined && a.name_value_list.status_description.value !== "" && $("#ViewLeadDetailsPageDetailsList").append("<li><p><br />Status Desccription<p><h4>" + a.name_value_list.status_description.value + "</h4></li>");
	            a.name_value_list.lead_source_description !== undefined && a.name_value_list.lead_source_description.value !== "" && $("#ViewLeadDetailsPageDetailsList").append("<li><p><br />Source Description<p><h4>" + a.name_value_list.lead_source_description.value + "</h4></li>");
	            a.name_value_list.opportunity_amount !== undefined && a.name_value_list.opportunity_amount.value !== "" && $("#ViewLeadDetailsPageDetailsList").append("<li><p><br />Opportunity Amount<p><h4>$" + parseFloat(a.name_value_list.opportunity_amount.value).toFixed(2) + "</h4></li>");
	            a.name_value_list.refered_by !== undefined && a.name_value_list.refered_by.value !== "" && $("#ViewLeadDetailsPageDetailsList").append("<li><p><br />Referred By<p><h4>" + a.name_value_list.refered_by.value + "</h4></li>");
	            a.name_value_list.campaign_name !== undefined && a.name_value_list.campaign_name.value !== "" && $("#ViewLeadDetailsPageDetailsList").append("<li><p><br /><p><h4>Campaign:&nbsp;" + a.name_value_list.campaign_name.value + "</h4></li>");
	            $("#ViewLeadDetailsPageDetailsList").append('<li data-role="list-divider">Other Information</li>');
	            a.name_value_list.assigned_user_name !== undefined && a.name_value_list.assigned_user_name.value !== "" && $("#ViewLeadDetailsPageDetailsList").append("<li><p><br />Assigned To</p><h4>" + a.name_value_list.assigned_user_name.value + "</h4></li>");
	            a.name_value_list.date_modified !== undefined && a.name_value_list.date_modified.value !== "" && $("#ViewLeadDetailsPageDetailsList").append("<li><p><br />Date Modified</p><h4>" + a.name_value_list.date_modified.value + "&nbsp;by&nbsp;" + a.name_value_list.modified_by_name.value + "</h4></li>");
	            a.name_value_list.date_entered !== undefined && a.name_value_list.date_entered.value !== "" && $("#ViewLeadDetailsPageDetailsList").append("<li><p><br />Date Created</p><h4>" + a.name_value_list.date_entered.value + "&nbsp;by&nbsp;" + a.name_value_list.created_by_name.value + "</h4></li>");
	            a.name_value_list.do_not_call.value == "true" && alert("*NOTE: This Lead is marked as Do Not Call.")
	        }
	        $("#ViewLeadDetailsPageDetailsList").listview("refresh")
	    }
	});
    getLeadRelatedCallsInsetList();
    getLeadRelatedMeetingsInsetList();
    getLeadRelatedTasksInsetList()
}
function getLeadRelatedCallsInsetList()
{
    $("#ViewLeadDetailsPageCallsListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Leads","module_id":"' + CurrentLeadId + '","link_field_name":"calls","related_module_query":"","related_fields":["id","name","status","date_start"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewLeadDetailsPageCallsListUl").append('<li data-role="list-divider">Calls</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<h4>" + b.name_value_list.name.value + "</h4>",
					e = "";
	                if (b.name_value_list.status != undefined)
	                {
	                    e = "<p>" + b.name_value_list.status.value;
	                    if (b.name_value_list.date_start != undefined) e += "<br/>" + b.name_value_list.date_start.value;
	                    e += "</p>"
	                } else e = "<p></p>";
	                var m = $("<a/>", {
	                    href: "#",
	                    "data-identity": b.id,
	                    click: function()
	                    {
	                        CurrentCallId = $(this).data("identity");
	                        $.mobile.changePage("#ViewCallDetailsPage")
	                    }
	                });
	                m.append(f);
	                b.name_value_list.status != undefined && m.append(e);
	                d.append(m);
	                $("#ViewLeadDetailsPageCallsListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewLeadDetailsPageCallsListUl").append(a)
	        }
	        $("#ViewLeadDetailsPageCallsListUl").listview("refresh")
	    }
	})
}
function getLeadRelatedMeetingsInsetList()
{
    $("#ViewLeadDetailsPageMeetingsListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Leads","module_id":"' + CurrentLeadId + '","link_field_name":"meetings","related_module_query":"","related_fields":["id","name","status","date_start"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewLeadDetailsPageMeetingsListUl").append('<li data-role="list-divider">Meetings</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<h4>" + b.name_value_list.name.value + "</h4>",
					e = "";
	                if (b.name_value_list.status != undefined)
	                {
	                    e = "<p>" + b.name_value_list.status.value;
	                    if (b.name_value_list.date_start != undefined) e += "<br/>" + b.name_value_list.date_start.value;
	                    e += "</p>"
	                } else e = "<p></p>";
	                b = $("<a/>", {
	                    href: "#",
	                    "data-identity": b.id,
	                    click: function()
	                    {
	                        CurrentMeetingId = $(this).data("identity");
	                        $.mobile.changePage("#ViewMeetingDetailsPage")
	                    }
	                });
	                b.append(f);
	                b.append(e);
	                d.append(b);
	                $("#ViewLeadDetailsPageMeetingsListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewLeadDetailsPageMeetingsListUl").append(a)
	        }
	        $("#ViewLeadDetailsPageMeetingsListUl").listview("refresh")
	    }
	})
}
function getLeadRelatedTasksInsetList()
{
    $("#ViewLeadDetailsPageTasksListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Leads","module_id":"' + CurrentLeadId + '","link_field_name":"tasks","related_module_query":"","related_fields":["id","name","status","date_start"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewLeadDetailsPageTasksListUl").append('<li data-role="list-divider">Tasks</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<h4>" + b.name_value_list.name.value + "</h4>",
					e = "";
	                if (b.name_value_list.status != undefined)
	                {
	                    e = "<p>" + b.name_value_list.status.value;
	                    if (b.name_value_list.date_start != undefined) e += "<br/>" + b.name_value_list.date_start.value;
	                    e += "</p>"
	                } else e = "<p></p>";
	                b = $("<a/>", {
	                    href: "#",
	                    "data-identity": b.id,
	                    click: function()
	                    {
	                        CurrentTaskId = $(this).data("identity");
	                        $.mobile.changePage("#ViewTaskDetailsPage")
	                    }
	                });
	                b.append(f);
	                b.append(e);
	                d.append(b);
	                $("#ViewLeadDetailsPageTasksListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewLeadDetailsPageTasksListUl").append(a)
	        }
	        $("#ViewLeadDetailsPageTasksListUl").listview("refresh")
	    }
	    $.mobile.pageLoading(true)
	})
}
function CiviCRMGetCallsListFromServer(a)
{
    if ($("#AllCallsListDiv li").length === 0 || CallsListCurrentOffset !== a)
    {
        $.mobile.pageLoading();
        CallsListCurrentOffset = a;
        $.get(SERVER_REST_URL, {
            method: "get_entry_list",
            input_type: "JSON",
            response_type: "JSON",
            rest_data: '{"session":"' + CiviSessionId + '","module_name":"Calls","query":"","order_by":"date_start desc","offset":' + a + ',"select_fields":"","link_name_to_fields_array":"","max_results":' + RowsPerPageInListViews + ',"deleted":0}'
        },
		function(c)
		{
		    if (c != undefined)
		    {
		        c = jQuery.parseJSON(c);
		        if (c.name !== undefined && c.name === "Invalid Session ID")
		        {
		            CiviSessionId = "";
		            $.mobile.changePage("#LoginPage")
		        }
		        if (c != undefined && c.entry_list != undefined)
		        {
		            if (c.result_count === 0) CallsListCurrentOffset = CallsListPrevOffset + RowsPerPageInListViews;
		            else if (c.next_offset === 0) CallsListCurrentOffset = 0;
		            if (c.next_offset == 0 || c.result_count == 0) alert("There are no more records in that direction");
		            else
		            {
		                $("#AllCallsListDiv li").remove();
		                var b = 0;
		                for (b = 0; b <= c.entry_list.length; b++) if (c.entry_list[b] != undefined)
		                {
		                    var d = c.entry_list[b],
							f = $("<li/>"),
							e = "<p>" + d.name_value_list.date_start.value + "</p>",
							m = "<h4>" + d.name_value_list.name.value + "</h4>",
							g = "<p>" + d.name_value_list.direction.value + " " + d.name_value_list.status.value + "</p>";
		                    d = $("<a/>", {
		                        href: "#",
		                        "data-identity": d.id,
		                        click: function()
		                        {
		                            CurrentCallId = $(this).data("identity");
		                            $.mobile.changePage("#ViewCallDetailsPage");
		                            $.mobile.pageLoading();
		                            CiviCRMGetCallDetails()
		                        }
		                    });
		                    d.append(m);
		                    d.append(g);
		                    d.append(e);
		                    f.append(d);
		                    $("#AllCallsListDiv").append(f)
		                }
		                $("#AllCallsListDiv").listview("refresh");
		                CallsListNextOffset = c.next_offset;
		                CallsListPrevOffset = a - RowsPerPageInListViews
		            }
		        }
		    }
		    $.mobile.pageLoading(true)
		})
    }
}
function CiviCRMGetCallDetails()
{
    $.mobile.pageLoading();
    $("#CallNameH1").html("");
    $("#CallSubjectP").text("");
    $("#ViewCallDetailsPageDetailsList li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_entry",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Calls","id":"' + CurrentCallId + '","select_fields":"","link_name_to_fields_array":""}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list[0] != undefined)
	        {
	            a = a.entry_list[0];
	            $("#CallNameH1").html(a.name_value_list.name.value);
	            var c = a.name_value_list.direction.value + " " + a.name_value_list.status.value;
	            $("#CallSubjectP").text(c);
	            $("#ViewCallDetailsPageDetailsList").append('<li data-role="list-divider">Call Overview</li>');
	            a.name_value_list.date_start !== undefined && a.name_value_list.date_start.value !== "" && $("#ViewCallDetailsPageDetailsList").append("<li><p><br />Start Date/Time</p><h4>" + a.name_value_list.date_start.value + "</h4></li>");
	            a.name_value_list.duration_hours !== undefined && a.name_value_list.duration_hours.value !== "" && $("#ViewCallDetailsPageDetailsList").append("<li><p><br />Duration</p><h4>" + a.name_value_list.duration_hours.value + "h&nbsp;" + a.name_value_list.duration_minutes.value + "m&nbsp;</h4></li>");
	            a.name_value_list.description !== undefined && a.name_value_list.description.value !== "" && $("#ViewCallDetailsPageDetailsList").append("<li><p><br />Description</p><h4>" + a.name_value_list.description.value + "</h4></li>");
	            $("#ViewCallDetailsPageDetailsList").append('<li data-role="list-divider">Other Information</li>');
	            a.name_value_list.assigned_user_name !== undefined && a.name_value_list.assigned_user_name.value !== "" && $("#ViewCallDetailsPageDetailsList").append("<li><p><br />Assigned To</p><h4>" + a.name_value_list.assigned_user_name.value + "</h4></li>");
	            a.name_value_list.date_modified !== undefined && a.name_value_list.date_modified.value !== "" && $("#ViewCallDetailsPageDetailsList").append("<li><p><br />Date Modified</p><h4>" + a.name_value_list.date_modified.value + "&nbsp;by&nbsp;" + a.name_value_list.modified_by_name.value + "</h4></li>");
	            a.name_value_list.date_entered !== undefined && a.name_value_list.date_entered.value !== "" && $("#ViewCallDetailsPageDetailsList").append("<li><p><br />Date Created</p><h4>" + a.name_value_list.date_entered.value + "&nbsp;by&nbsp;" + a.name_value_list.created_by_name.value + "</h4></li>");
	            a.name_value_list.parent_id !== undefined && a.name_value_list.parent_id.value !== "" ? getCallParentDetails(a.name_value_list.parent_type.value, a.name_value_list.parent_id.value) : $("#ViewCallDetailsPageDetailsList").listview("refresh")
	        }
	    }
	});
    getCallRelatedContactsInsetList();
    getCallRelatedLeadsInsetList();
    getCallRelatedNotesInsetList()
}
function getCallParentDetails(a, c)
{
    var b = "<h4>" + a + ":&nbsp;";
    $.get(SERVER_REST_URL, {
        method: "get_entry",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"' + a + '","id":"' + c + '","select_fields":"","link_name_to_fields_array":""}'
    },
	function(d)
	{
	    d = jQuery.parseJSON(d);
	    if (d.name !== undefined && d.name === "Invalid Session ID")
	    {
	        CiviSessionId = "";
	        $.mobile.changePage("#LoginPage")
	    }
	    if (d != undefined && d.entry_list != undefined) if (d.entry_list[0] != undefined)
	    {
	        d = d.entry_list[0];
	        b += d.module_name == "Leads" || d.module_name == "Contacts" ? d.name_value_list.first_name.value + " " + d.name_value_list.last_name.value : d.name_value_list.name.value
	    }
	    b += "</h4>";
	    $("#ViewCallDetailsPageDetailsList").append('<li data-role="list-divider">Related To</li>');
	    $("#ViewCallDetailsPageDetailsList").append("<li>" + b + "</li>");
	    $("#ViewCallDetailsPageDetailsList").listview("refresh")
	})
}
function getCallRelatedContactsInsetList()
{
    $("#ViewCallDetailsPageContactsListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Calls","module_id":"' + CurrentCallId + '","link_field_name":"contacts","related_module_query":"","related_fields":["id","first_name","last_name","title"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewCallDetailsPageContactsListUl").append('<li data-role="list-divider">Contacts</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<h4>" + b.name_value_list.first_name.value + "&nbsp;" + b.name_value_list.last_name.value + "</h4>",
					e = "<p>" + b.name_value_list.title.value + "</p>";
	                b = $("<a/>", {
	                    href: "#",
	                    "data-identity": b.id,
	                    click: function()
	                    {
	                        CurrentContactId = $(this).data("identity");
	                        $.mobile.changePage("#ViewContactDetailsPage");
	                        $.mobile.pageLoading();
	                        CiviCRMGetContactDetails()
	                    }
	                });
	                b.append(f);
	                b.append(e);
	                d.append(b);
	                $("#ViewCallDetailsPageContactsListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewCallDetailsPageContactsListUl").append(a)
	        }
	        $("#ViewCallDetailsPageContactsListUl").listview("refresh")
	    }
	    $.mobile.pageLoading(true)
	})
}
function getCallRelatedUsersInsetList()
{
    $("#ViewCallDetailsPageUsersListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Calls","module_id":"' + CurrentCallId + '","link_field_name":"users","related_module_query":"","related_fields":["id","first_name","last_name","title"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewCallDetailsPageUsersListUl").append('<li data-role="list-divider">Users</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<p>" + b.name_value_list.title.value + "</p>";
	                d.append("<h4>" + b.name_value_list.first_name.value + "&nbsp;" + b.name_value_list.last_name.value + "</h4>");
	                d.append(f);
	                $("#ViewCallDetailsPageUsersListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewCallDetailsPageUsersListUl").append(a)
	        }
	        $("#ViewCallDetailsPageUsersListUl").listview("refresh")
	    }
	    $.mobile.pageLoading(true)
	})
}
function getCallRelatedLeadsInsetList()
{
    $("#ViewCallDetailsPageLeadsListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Calls","module_id":"' + CurrentCallId + '","link_field_name":"leads","related_module_query":"","related_fields":["id","first_name","last_name","title"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewCallDetailsPageLeadsListUl").append('<li data-role="list-divider">Leads</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<h4>" + b.name_value_list.first_name.value + " " + b.name_value_list.last_name.value + "</h4>",
					e = "";
	                e = b.name_value_list.title != undefined ? "<p>" + b.name_value_list.title.value + "</p>" : "<p></p>";
	                b = $("<a/>", {
	                    href: "#",
	                    "data-identity": b.id,
	                    click: function()
	                    {
	                        CurrentLeadId = $(this).data("identity");
	                        $.mobile.changePage("#ViewLeadDetailsPage");
	                        $.mobile.pageLoading();
	                        CiviCRMGetLeadDetails()
	                    }
	                });
	                b.append(f);
	                b.append(e);
	                d.append(b);
	                $("#ViewCallDetailsPageLeadsListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewCallDetailsPageLeadsListUl").append(a)
	        }
	        $("#ViewCallDetailsPageLeadsListUl").listview("refresh")
	    }
	})
}
function getCallRelatedNotesInsetList()
{
    $("#ViewCallDetailsPageNotesListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Calls","module_id":"' + CurrentCallId + '","link_field_name":"notes","related_module_query":"","related_fields":["id","name","description","date_entered"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewCallDetailsPageNotesListUl").append('<li data-role="list-divider">Notes</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<h4>" + b.name_value_list.name.value + "</h4>",
					e = "";
	                e = b.name_value_list.description != undefined ? "<p>" + b.name_value_list.description.value + "</p>" : "<p></p>";
	                b = $("<a/>", {
	                    href: "#",
	                    "data-identity": b.id,
	                    click: function()
	                    {
	                        CurrentNoteId = $(this).data("identity");
	                        $.mobile.changePage("#ViewNoteDetailsPage");
	                        $.mobile.pageLoading();
	                        CiviCRMGetNoteDetails(CurrentNoteId)
	                    }
	                });
	                b.append(f);
	                b.append(e);
	                d.append(b);
	                $("#ViewCallDetailsPageNotesListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewCallDetailsPageNotesListUl").append(a)
	        }
	        $("#ViewCallDetailsPageNotesListUl").listview("refresh")
	    }
	    $.mobile.pageLoading(true)
	})
}
function CiviCRMGetMeetingsListFromServer(a)
{
    if ($("#AllMeetingsListDiv li").length === 0 || MeetingsListCurrentOffset !== a)
    {
        MeetingsListCurrentOffset = a;

        $.mobile.pageLoading();

        $().crmRESTAPI('activity', 'get',
               {
                   api_key: API_KEY,
                   key: CiviSessionId,
                   activity_type_id: {
                       IN: [C_ACTIVITY_TYPE_MEETING, C_ACTIVITY_TYPE_CALL]
                   }
               },
               {
                   ajaxURL: SERVER_REST_URL,
                   success: function(result, settings)
                   {
                       if (result)
                       {
                           if (result.is_error == 0)
                           {
                               if (result.values != undefined)
                               {
                                   /*
                                   if (result.result_count === 0) ContactsListCurrentOffset = ContactsListPrevOffset + RowsPerPageInListViews;
                                   else if (result.next_offset === 0) ContactsListCurrentOffset = 0;
                                   if (result.next_offset == 0 || result.result_count == 0) alert("There are no more records in that direction");
                                   else {
                                   */
                                   $("#AllMeetingsListDiv li").remove();

                                   $.each(result.values, function(index, value)
                                   {
                                       if (typeof value == 'object')
                                       {
                                           var activityName = C_ACTIVITY_TYPE_NAMES[value.activity_type_id];

                                           f = $("<li/>"),
                                           e = "<h4>" + value.subject + "</h4>",
                                           m = "<p>" + activityName + ' at ' + value.activity_date_time + "</p>";
                                           d = $("<a/>", {
                                               href: "#",
                                               "data-identity": value.id,
                                               click: function()
                                               {
                                                   CurrentMeetingId = $(this).data("identity");
                                                   $.mobile.changePage("#ViewMeetingDetailsPage");
                                                   $.mobile.pageLoading();
                                                   CiviCRMGetMeetingDetails()
                                               }
                                           });
                                           d.append(e);
                                           d.append(m);
                                           f.append(d);
                                           $("#AllMeetingsListDiv").append(f)
                                       }
                                   });
                                   $("#AllMeetingsListDiv").listview("refresh");
                                   //MeetingsListNextOffset = c.next_offset;
                                   //MeetingsListPrevOffset = a - RowsPerPageInListViews
                                   //}
                               }
                           }
                       } else
                       {
                           alert("An unexpected error occurred.");
                       }
                       $.mobile.hidePageLoadingMsg();
                   }
               });
    }

    /*
    if ($("#AllMeetingsListDiv li").length === 0 || MeetingsListCurrentOffset !== a) {
    $.mobile.pageLoading();
    MeetingsListCurrentOffset = a;
    $.get(SERVER_REST_URL, {
    method: "get_entry_list",
    input_type: "JSON",
    response_type: "JSON",
    rest_data: '{"session":"' + CiviSessionId + '","module_name":"Meetings","query":"","order_by":"date_start desc","offset":' + a + ',"select_fields":"","link_name_to_fields_array":"","max_results":' + RowsPerPageInListViews + ',"deleted":0}'
    },
    function (c) {
    if (c != undefined) {
    c = jQuery.parseJSON(c);
    if (c.name !== undefined && c.name === "Invalid Session ID") {
    CiviSessionId = "";
    $.mobile.changePage("#LoginPage")
    }
    if (c != undefined && c.entry_list != undefined) {
    if (c.result_count === 0) MeetingsListCurrentOffset = MeetingsListPrevOffset + RowsPerPageInListViews;
    else if (c.next_offset === 0) MeetingsListCurrentOffset = 0;
    if (c.next_offset == 0 || c.result_count == 0) alert("There are no more records in that direction");
    else {
    $("#AllMeetingsListDiv li").remove();
    var b = 0;
    for (b = 0; b <= c.entry_list.length; b++) if (c.entry_list[b] != undefined) {
    var d = c.entry_list[b],
    f = $("<li/>"),
    e = "<h4>" + d.name_value_list.name.value + "</h4>",
    m = "<p>" + d.name_value_list.status.value + " " + d.name_value_list.date_start.value + "</p>";
    d = $("<a/>", {
    href: "#",
    "data-identity": d.id,
    click: function () {
    CurrentMeetingId = $(this).data("identity");
    $.mobile.changePage("#ViewMeetingDetailsPage");
    $.mobile.pageLoading();
    CiviCRMGetMeetingDetails()
    }
    });
    d.append(e);
    d.append(m);
    f.append(d);
    $("#AllMeetingsListDiv").append(f)
    }
    $("#AllMeetingsListDiv").listview("refresh");
    MeetingsListNextOffset = c.next_offset;
    MeetingsListPrevOffset = a - RowsPerPageInListViews
    }
    }
    }
    $.mobile.pageLoading(true)
    })
    }
    */
}
function CiviCRMGetMeetingDetails()
{
    $.mobile.pageLoading();
    $("#MeetingNameH1").html("");
    $("#MeetingSubjectP").text("");
    $("#ViewMeetingDetailsPageDetailsList li").remove();

    $().crmRESTAPI('activity', 'get',
               {
                   activity_id: CurrentMeetingId,
                   api_key: API_KEY,
                   key: CiviSessionId
               },
               {
                   ajaxURL: SERVER_REST_URL,
                   success: function(result, settings)
                   {
                       if (result)
                       {
                           if (result.is_error == 0)
                           {
                               if (result.values != undefined && result.values != null)
                               {

                                   a = result.values[result.id];

                                   $("#MeetingNameH1").html(a.subject);
                                   var c = C_ACTIVITY_TYPE_NAMES[a.activity_type_id];
                                   //if (a.name_value_list.account_name != undefined) c += " at " + a.name_value_list.account_name.value;
                                   $("#MeetingSubjectP").text(c);
                                   $("#ViewMeetingDetailsPageDetailsList").append('<li data-role="list-divider">' + RES_MEETING_LABEL + ' Information</li>');
                                   if (a.activity_date_time !== undefined && a.activity_date_time !== "")
                                   {
                                       c = $("<li/>");
                                       d = "<h4>" + a.activity_date_time + "</h4>";
                                       c.append("<p><br />Activity date</p>");
                                       c.append(d);
                                       $("#ViewMeetingDetailsPageDetailsList").append(c)
                                   }
                                   if (a.status_id !== undefined && a.status_id !== "")
                                   {
                                       c = $("<li/>");
                                       d = "<h4>" + C_ACTIVITY_STATUSES[a.status_id] + "</h4>";
                                       c.append("<p><br />Status</p>");
                                       c.append(d);
                                       $("#ViewMeetingDetailsPageDetailsList").append(c)
                                   }
                                   if (a.priority_id !== undefined && a.priority_id !== "")
                                   {
                                       c = $("<li/>");
                                       d = "<h4>" + C_ACTIVITY_PROIRITY[a.priority_id] + "</h4>";
                                       c.append("<p><br />Priority</p>");
                                       c.append(d);
                                       $("#ViewMeetingDetailsPageDetailsList").append(c)
                                   }
                                   $("#ViewMeetingDetailsPageDetailsList").listview("refresh");
                               }
                           }
                           getMeetingRelatedContactsInsetList();
                           getMeetingRelatedLeadsInsetList();
                           getMeetingRelatedNotesInsetList()
                       }
                       $.mobile.hidePageLoadingMsg();
                   }
               });
}
function getMeetingParentDetails(a, c)
{
    var b = "<h4>" + a + ":&nbsp;";
    $.get(SERVER_REST_URL, {
        method: "get_entry",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"' + a + '","id":"' + c + '","select_fields":"","link_name_to_fields_array":""}'
    },
	function(d)
	{
	    d = jQuery.parseJSON(d);
	    if (d.name !== undefined && d.name === "Invalid Session ID")
	    {
	        CiviSessionId = "";
	        $.mobile.changePage("#LoginPage")
	    }
	    if (d != undefined && d.entry_list != undefined) if (d.entry_list[0] != undefined)
	    {
	        d = d.entry_list[0];
	        b += d.module_name == "Leads" || d.module_name == "Contacts" ? d.name_value_list.first_name.value + " " + d.name_value_list.last_name.value : d.name_value_list.name.value
	    }
	    b += "</h4>";
	    $("#ViewMeetingDetailsPageDetailsList").append('<li data-role="list-divider">Related To</li>');
	    $("#ViewMeetingDetailsPageDetailsList").append("<li>" + b + "</li>");
	    $("#ViewMeetingDetailsPageDetailsList").listview("refresh")
	})
}
function getMeetingRelatedContactsInsetList()
{
    $("#ViewMeetingDetailsPageContactsListUl li").remove();
    CiviSessionId == "" && $.mobile.changePage("#HomePage");
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Meetings","module_id":"' + CurrentMeetingId + '","link_field_name":"contacts","related_module_query":"","related_fields":["id","first_name","last_name","title"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewMeetingDetailsPageContactsListUl").append('<li data-role="list-divider">Contacts</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<h4>" + b.name_value_list.first_name.value + "&nbsp;" + b.name_value_list.last_name.value + "</h4>",
					e = "<p>" + b.name_value_list.title.value + "</p>";
	                b = $("<a/>", {
	                    href: "#",
	                    "data-identity": b.id,
	                    click: function()
	                    {
	                        CurrentContactId = $(this).data("identity");
	                        $.mobile.changePage("#ViewContactDetailsPage");
	                        $.mobile.pageLoading();
	                        CiviCRMGetContactDetails()
	                    }
	                });
	                b.append(f);
	                b.append(e);
	                d.append(b);
	                $("#ViewMeetingDetailsPageContactsListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewMeetingDetailsPageContactsListUl").append(a)
	        }
	        $("#ViewMeetingDetailsPageContactsListUl").listview("refresh")
	    }
	    $.mobile.pageLoading(true)
	})
}
function getMeetingRelatedUsersInsetList()
{
    $("#ViewMeetingDetailsPageUsersListUl li").remove();
    CiviSessionId == "" && $.mobile.changePage("#HomePage");
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Meetings","module_id":"' + CurrentMeetingId + '","link_field_name":"users","related_module_query":"","related_fields":"","related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewMeetingDetailsPageUsersListUl").append('<li data-role="list-divider">Users</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<p>" + b.name_value_list.title.value + "</p>";
	                d.append("<h4>" + b.name_value_list.first_name.value + "&nbsp;" + b.name_value_list.last_name.value + "</h4>");
	                d.append(f);
	                $("#ViewMeetingDetailsPageUsersListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewMeetingDetailsPageUsersListUl").append(a)
	        }
	        $("#ViewMeetingDetailsPageUsersListUl").listview("refresh")
	    }
	    $.mobile.pageLoading(true)
	})
}
function getMeetingRelatedLeadsInsetList()
{
    $("#ViewMeetingDetailsPageLeadsListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Meetings","module_id":"' + CurrentMeetingId + '","link_field_name":"leads","related_module_query":"","related_fields":["id","first_name","last_name","title"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewMeetingDetailsPageLeadsListUl").append('<li data-role="list-divider">Leads</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<h4>" + b.name_value_list.first_name.value + " " + b.name_value_list.last_name.value + "</h4>",
					e = "";
	                e = b.name_value_list.title != undefined ? "<p>" + b.name_value_list.title.value + "</p>" : "<p></p>";
	                b = $("<a/>", {
	                    href: "#",
	                    "data-identity": b.id,
	                    click: function()
	                    {
	                        CurrentLeadId = $(this).data("identity");
	                        $.mobile.changePage("#ViewLeadDetailsPage");
	                        $.mobile.pageLoading();
	                        CiviCRMGetLeadDetails()
	                    }
	                });
	                b.append(f);
	                b.append(e);
	                d.append(b);
	                $("#ViewMeetingDetailsPageLeadsListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewMeetingDetailsPageLeadsListUl").append(a)
	        }
	        $("#ViewMeetingDetailsPageLeadsListUl").listview("refresh")
	    }
	})
}
function getMeetingRelatedNotesInsetList()
{
    $("#ViewMeetingDetailsPageNotesListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Meetings","module_id":"' + CurrentMeetingId + '","link_field_name":"notes","related_module_query":"","related_fields":["id","name","description","date_entered"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewMeetingDetailsPageNotesListUl").append('<li data-role="list-divider">Notes</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<h4>" + b.name_value_list.name.value + "</h4>",
					e = "";
	                e = b.name_value_list.description != undefined ? "<p>" + b.name_value_list.description.value + "</p>" : "<p></p>";
	                b = $("<a/>", {
	                    href: "#",
	                    "data-identity": b.id,
	                    click: function()
	                    {
	                        CurrentNoteId = $(this).data("identity");
	                        $.mobile.changePage("#ViewNoteDetailsPage");
	                        $.mobile.pageLoading();
	                        CiviCRMGetNoteDetails(CurrentNoteId)
	                    }
	                });
	                b.append(f);
	                b.append(e);
	                d.append(b);
	                $("#ViewMeetingDetailsPageNotesListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewMeetingDetailsPageNotesListUl").append(a)
	        }
	        $("#ViewMeetingDetailsPageNotesListUl").listview("refresh")
	    }
	    $.mobile.pageLoading(true)
	})
}
function CiviCRMGetTasksListFromServer(a)
{
    if ($("#AllTasksListDiv li").length === 0 || TasksListCurrentOffset !== a)
    {
        $.mobile.pageLoading();
        TasksListCurrentOffset = a;
        $.get(SERVER_REST_URL, {
            method: "get_entry_list",
            input_type: "JSON",
            response_type: "JSON",
            rest_data: '{"session":"' + CiviSessionId + '","module_name":"Tasks","query":"","order_by":"date_start desc","offset":' + a + ',"select_fields":"","link_name_to_fields_array":"","max_results":' + RowsPerPageInListViews + ',"deleted":0}'
        },
		function(c)
		{
		    if (c != undefined)
		    {
		        c = jQuery.parseJSON(c);
		        if (c.name !== undefined && c.name === "Invalid Session ID")
		        {
		            CiviSessionId = "";
		            $.mobile.changePage("#LoginPage")
		        }
		        if (c != undefined && c.entry_list != undefined)
		        {
		            if (c.result_count === 0) TasksListCurrentOffset = TasksListPrevOffset + RowsPerPageInListViews;
		            else if (c.next_offset === 0) TasksListCurrentOffset = 0;
		            if (c.next_offset == 0 || c.result_count == 0) alert("There are no more records in that direction");
		            else
		            {
		                $("#AllTasksListDiv li").remove();
		                var b = 0;
		                for (b = 0; b <= c.entry_list.length; b++) if (c.entry_list[b] != undefined)
		                {
		                    var d = c.entry_list[b],
							f = $("<li/>"),
							e = "<h4>" + d.name_value_list.name.value + "</h4>",
							m = "<p>" + d.name_value_list.status.value + " - " + d.name_value_list.date_due.value + "</p>";
		                    d = $("<a/>", {
		                        href: "#",
		                        "data-identity": d.id,
		                        click: function()
		                        {
		                            CurrentTaskId = $(this).data("identity");
		                            $.mobile.changePage("#ViewTaskDetailsPage");
		                            $.mobile.pageLoading();
		                            CiviCRMGetTaskDetails()
		                        }
		                    });
		                    d.append(e);
		                    d.append(m);
		                    f.append(d);
		                    $("#AllTasksListDiv").append(f)
		                }
		                $("#AllTasksListDiv").listview("refresh");
		                TasksListNextOffset = c.next_offset;
		                TasksListPrevOffset = a - RowsPerPageInListViews
		            }
		        }
		    }
		    $.mobile.pageLoading(true)
		})
    }
}
function CiviCRMGetTaskDetails()
{
    $.mobile.pageLoading();
    $("#TaskNameH1").html("");
    $("#TaskSubjectP").text("");
    $("#ViewTaskDetailsPageDetailsList li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_entry",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Tasks","id":"' + CurrentTaskId + '","select_fields":"","link_name_to_fields_array":""}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list[0] != undefined)
	        {
	            a = a.entry_list[0];
	            $("#TaskNameH1").html(a.name_value_list.name.value);
	            var c = a.name_value_list.status.value;
	            $("#TaskSubjectP").text(c);
	            $("#ViewTaskDetailsPageDetailsList").append('<li data-role="list-divider">Task Overview</li>');
	            a.name_value_list.date_due !== undefined && a.name_value_list.date_due.value !== "" && $("#ViewTaskDetailsPageDetailsList").append("<li><p><br />Due Date</p><h4>" + a.name_value_list.date_due.value + "</h4></li>");
	            a.name_value_list.duration_hours !== undefined && a.name_value_list.duration_hours.value !== "" && $("#ViewTaskDetailsPageDetailsList").append("<li><p><br />Duration</p><h4>" + a.name_value_list.duration_hours.value + "h&nbsp;" + a.name_value_list.duration_minutes.value + "m&nbsp;</h4></li>");
	            a.name_value_list.description !== undefined && a.name_value_list.description.value !== "" && $("#ViewTaskDetailsPageDetailsList").append("<li><p><br />Description</p><h4>" + a.name_value_list.description.value + "</h4></li>");
	            $("#ViewTaskDetailsPageDetailsList").append('<li data-role="list-divider">Other Information</li>');
	            a.name_value_list.assigned_user_name !== undefined && a.name_value_list.assigned_user_name.value !== "" && $("#ViewTaskDetailsPageDetailsList").append("<li><p><br />Assigned To</p><h4>" + a.name_value_list.assigned_user_name.value + "</h4></li>");
	            a.name_value_list.date_modified !== undefined && a.name_value_list.date_modified.value !== "" && $("#ViewTaskDetailsPageDetailsList").append("<li><p><br />Date Modified</p><h4>" + a.name_value_list.date_modified.value + "&nbsp;by&nbsp;" + a.name_value_list.modified_by_name.value + "</h4></li>");
	            a.name_value_list.date_entered !== undefined && a.name_value_list.date_entered.value !== "" && $("#ViewTaskDetailsPageDetailsList").append("<li><p><br />Date Created</p><h4>" + a.name_value_list.date_entered.value + "&nbsp;by&nbsp;" + a.name_value_list.created_by_name.value + "</h4></li>");
	            a.name_value_list.parent_id !== undefined && a.name_value_list.parent_id.value !== "" ? getTaskParentDetails(a.name_value_list.parent_type.value, a.name_value_list.parent_id.value) : $("#ViewTaskDetailsPageDetailsList").listview("refresh")
	        }
	    }
	    getTaskRelatedContactsInsetList();
	    getTaskRelatedLeadsInsetList()
	})
}
function getTaskParentDetails(a, c)
{
    var b = "<h4>" + a + ":&nbsp;";
    $.get(SERVER_REST_URL, {
        method: "get_entry",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"' + a + '","id":"' + c + '","select_fields":"","link_name_to_fields_array":""}'
    },
	function(d)
	{
	    d = jQuery.parseJSON(d);
	    if (d.name !== undefined && d.name === "Invalid Session ID")
	    {
	        CiviSessionId = "";
	        $.mobile.changePage("#LoginPage")
	    }
	    if (d != undefined && d.entry_list != undefined) if (d.entry_list[0] != undefined)
	    {
	        d = d.entry_list[0];
	        b += d.module_name == "Leads" || d.module_name == "Contacts" ? d.name_value_list.first_name.value + " " + d.name_value_list.last_name.value : d.name_value_list.name.value
	    }
	    b += "</h4>";
	    $("#ViewTaskDetailsPageDetailsList").append('<li data-role="list-divider">Related To</li>');
	    $("#ViewTaskDetailsPageDetailsList").append("<li>" + b + "</li>");
	    $("#ViewTaskDetailsPageDetailsList").listview("refresh")
	})
}
function getTaskRelatedContactsInsetList()
{
    $("#ViewTaskDetailsPageContactsListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Tasks","module_id":"' + CurrentTaskId + '","link_field_name":"contacts","related_module_query":"","related_fields":["id","first_name","last_name","title"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewTaskDetailsPageContactsListUl").append('<li data-role="list-divider">Contacts</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<h4>" + b.name_value_list.first_name.value + "&nbsp;" + b.name_value_list.last_name.value + "</h4>",
					e = "<p>" + b.name_value_list.title.value + "</p>";
	                b = $("<a/>", {
	                    href: "#",
	                    "data-identity": b.id,
	                    click: function()
	                    {
	                        CurrentContactId = $(this).data("identity");
	                        $.mobile.changePage("#ViewContactDetailsPage");
	                        $.mobile.pageLoading();
	                        CiviCRMGetContactDetails()
	                    }
	                });
	                b.append(f);
	                b.append(e);
	                d.append(b);
	                $("#ViewTaskDetailsPageContactsListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewTaskDetailsPageContactsListUl").append(a)
	        }
	        $("#ViewTaskDetailsPageContactsListUl").listview("refresh")
	    }
	    $.mobile.pageLoading(true)
	})
}
function getTaskRelatedUsersInsetList()
{
    $("#ViewTaskDetailsPageUsersListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Tasks","module_id":"' + CurrentTaskId + '","link_field_name":"users","related_module_query":"","related_fields":["id","first_name","last_name","title"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewTaskDetailsPageUsersListUl").append('<li data-role="list-divider">Users</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<p>" + b.name_value_list.title.value + "</p>";
	                d.append("<h4>" + b.name_value_list.first_name.value + "&nbsp;" + b.name_value_list.last_name.value + "</h4>");
	                d.append(f);
	                $("#ViewTaskDetailsPageUsersListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewTaskDetailsPageUsersListUl").append(a)
	        }
	        $("#ViewTaskDetailsPageUsersListUl").listview("refresh")
	    }
	    $.mobile.pageLoading(true)
	})
}
function getTaskRelatedLeadsInsetList()
{
    $("#ViewTaskDetailsPageLeadsListUl li").remove();
    $.get(SERVER_REST_URL, {
        method: "get_relationships",
        input_type: "JSON",
        response_type: "JSON",
        rest_data: '{"session":"' + CiviSessionId + '","module_name":"Tasks","module_id":"' + CurrentTaskId + '","link_field_name":"leads","related_module_query":"","related_fields":["id","first_name","last_name","title"],"related_module_link_name_to_fields_array":"","deleted":0}'
    },
	function(a)
	{
	    if (a != undefined)
	    {
	        $("#ViewTaskDetailsPageLeadsListUl").append('<li data-role="list-divider">Leads</li>');
	        a = jQuery.parseJSON(a);
	        if (a.name !== undefined && a.name === "Invalid Session ID")
	        {
	            CiviSessionId = "";
	            $.mobile.changePage("#LoginPage")
	        }
	        if (a != undefined && a.entry_list != undefined) if (a.entry_list.length > 0)
	        {
	            var c = 0;
	            for (c = 0; c <= a.entry_list.length; c++) if (a.entry_list[c] != undefined)
	            {
	                var b = a.entry_list[c],
					d = $("<li/>"),
					f = "<h4>" + b.name_value_list.first_name.value + " " + b.name_value_list.last_name.value + "</h4>",
					e = "";
	                e = b.name_value_list.title != undefined ? "<p>" + b.name_value_list.title.value + "</p>" : "<p></p>";
	                b = $("<a/>", {
	                    href: "#",
	                    "data-identity": b.id,
	                    click: function()
	                    {
	                        CurrentLeadId = $(this).data("identity");
	                        $.mobile.changePage("#ViewLeadDetailsPage");
	                        $.mobile.pageLoading();
	                        CiviCRMGetLeadDetails()
	                    }
	                });
	                b.append(f);
	                b.append(e);
	                d.append(b);
	                $("#ViewTaskDetailsPageLeadsListUl").append(d)
	            }
	        } else
	        {
	            a = $("<li/>");
	            a.append("<h4>No Data</h4>");
	            $("#ViewTaskDetailsPageLeadsListUl").append(a)
	        }
	        $("#ViewTaskDetailsPageLeadsListUl").listview("refresh")
	    }
	    $.mobile.pageLoading(true)
	})
}
/*
function CiviCRMGetNoteDetails() {
$("#NoteSubjectH1").html("");
$("#NoteTextP").text("");
$("#ViewNoteDetailsPageDetailsList li").remove();
$.get(SERVER_REST_URL, {
method: "get_entry",
input_type: "JSON",
response_type: "JSON",
rest_data: '{"session":"' + CiviSessionId + '","module_name":"Notes","id":"' + CurrentNoteId + '","select_fields":"","link_name_to_fields_array":""}'
},
function (a) {
if (a != undefined) {
a = jQuery.parseJSON(a);
if (a.name !== undefined && a.name === "Invalid Session ID") {
CiviSessionId = "";
$.mobile.changePage("#LoginPage")
}
if (a != undefined && a.entry_list != undefined) if (a.entry_list[0] != undefined) {
a = a.entry_list[0];
$("#NoteSubjectH1").html(a.name_value_list.name.value);
var c = a.name_value_list.description.value;
$("#NoteTextP").text(c);
$("#ViewNoteDetailsPageDetailsList").append('<li data-role="list-divider">Other Information</li>');
a.name_value_list.date_modified !== undefined && a.name_value_list.date_modified.value !== "" && $("#ViewNoteDetailsPageDetailsList").append("<li><p><br />Date Modified</p><h4>" + a.name_value_list.date_modified.value + "&nbsp;by&nbsp;" + a.name_value_list.modified_by_name.value + "</h4></li>");
a.name_value_list.date_entered !== undefined && a.name_value_list.date_entered.value !== "" && $("#ViewNoteDetailsPageDetailsList").append("<li><p><br />Date Created</p><h4>" + a.name_value_list.date_entered.value + "&nbsp;by&nbsp;" + a.name_value_list.created_by_name.value + "</h4></li>");
$("#ViewNoteDetailsPageDetailsList").listview("refresh")
}
}
$.mobile.pageLoading(true)
})
}
*/
(function(a)
{
    var c = function(g, i)
    {
        var o, n, q, p, h;
        q = g & 2147483648;
        p = i & 2147483648;
        o = g & 1073741824;
        n = i & 1073741824;
        h = (g & 1073741823) + (i & 1073741823);
        if (o & n) return h ^ 2147483648 ^ q ^ p;
        return o | n ? h & 1073741824 ? h ^ 3221225472 ^ q ^ p : h ^ 1073741824 ^ q ^ p : h ^ q ^ p
    },
	b = function(g, i, o, n, q, p, h)
	{
	    g = c(g, c(c(i & o | ~i & n, q), h));
	    return c(g << p | g >>> 32 - p, i)
	},
	d = function(g, i, o, n, q, p, h)
	{
	    g = c(g, c(c(i & n | o & ~n, q), h));
	    return c(g << p | g >>> 32 - p, i)
	},
	f = function(g, i, o, n, q, p, h)
	{
	    g = c(g, c(c(i ^ o ^ n, q), h));
	    return c(g << p | g >>> 32 - p, i)
	},
	e = function(g, i, o, n, q, p, h)
	{
	    g = c(g, c(c(o ^ (i | ~n), q), h));
	    return c(g << p | g >>> 32 - p, i)
	},
	m = function(g)
	{
	    var i = "",
		o = "",
		n;
	    for (n = 0; n <= 3; n++)
	    {
	        o = g >>> n * 8 & 255;
	        o = "0" + o.toString(16);
	        i += o.substr(o.length - 2, 2)
	    }
	    return i
	};
    a.extend({
        md5: function(g)
        {
            var i = [],
			o,
			n,
			q,
			p,
			h,
			j,
			k,
			l;
            i = g;
            i = i.replace(/\x0d\x0a/g, "\n");
            g = "";
            for (o = 0; o < i.length; o++)
            {
                n = i.charCodeAt(o);
                if (n < 128) g += String.fromCharCode(n);
                else
                {
                    if (n > 127 && n < 2048) g += String.fromCharCode(n >> 6 | 192);
                    else
                    {
                        g += String.fromCharCode(n >> 12 | 224);
                        g += String.fromCharCode(n >> 6 & 63 | 128)
                    }
                    g += String.fromCharCode(n & 63 | 128)
                }
            }
            i = g = g;
            g = i.length;
            o = g + 8;
            n = ((o - o % 64) / 64 + 1) * 16;
            q = Array(n - 1);
            for (h = p = 0; h < g; )
            {
                o = (h - h % 4) / 4;
                p = h % 4 * 8;
                q[o] |= i.charCodeAt(h) << p;
                h++
            }
            o = (h - h % 4) / 4;
            p = h % 4 * 8;
            q[o] |= 128 << p;
            q[n - 2] = g << 3;
            q[n - 1] = g >>> 29;
            i = q;
            h = 1732584193;
            j = 4023233417;
            k = 2562383102;
            l = 271733878;
            for (g = 0; g < i.length; g += 16)
            {
                o = h;
                n = j;
                q = k;
                p = l;
                h = b(h, j, k, l, i[g + 0], 7, 3614090360);
                l = b(l, h, j, k, i[g + 1], 12, 3905402710);
                k = b(k, l, h, j, i[g + 2], 17, 606105819);
                j = b(j, k, l, h, i[g + 3], 22, 3250441966);
                h = b(h, j, k, l, i[g + 4], 7, 4118548399);
                l = b(l, h, j, k, i[g + 5], 12, 1200080426);
                k = b(k, l, h, j, i[g + 6], 17, 2821735955);
                j = b(j, k, l, h, i[g + 7], 22, 4249261313);
                h = b(h, j, k, l, i[g + 8], 7, 1770035416);
                l = b(l, h, j, k, i[g + 9], 12, 2336552879);
                k = b(k, l, h, j, i[g + 10], 17, 4294925233);
                j = b(j, k, l, h, i[g + 11], 22, 2304563134);
                h = b(h, j, k, l, i[g + 12], 7, 1804603682);
                l = b(l, h, j, k, i[g + 13], 12, 4254626195);
                k = b(k, l, h, j, i[g + 14], 17, 2792965006);
                j = b(j, k, l, h, i[g + 15], 22, 1236535329);
                h = d(h, j, k, l, i[g + 1], 5, 4129170786);
                l = d(l, h, j, k, i[g + 6], 9, 3225465664);
                k = d(k, l, h, j, i[g + 11], 14, 643717713);
                j = d(j, k, l, h, i[g + 0], 20, 3921069994);
                h = d(h, j, k, l, i[g + 5], 5, 3593408605);
                l = d(l, h, j, k, i[g + 10], 9, 38016083);
                k = d(k, l, h, j, i[g + 15], 14, 3634488961);
                j = d(j, k, l, h, i[g + 4], 20, 3889429448);
                h = d(h, j, k, l, i[g + 9], 5, 568446438);
                l = d(l, h, j, k, i[g + 14], 9, 3275163606);
                k = d(k, l, h, j, i[g + 3], 14, 4107603335);
                j = d(j, k, l, h, i[g + 8], 20, 1163531501);
                h = d(h, j, k, l, i[g + 13], 5, 2850285829);
                l = d(l, h, j, k, i[g + 2], 9, 4243563512);
                k = d(k, l, h, j, i[g + 7], 14, 1735328473);
                j = d(j, k, l, h, i[g + 12], 20, 2368359562);
                h = f(h, j, k, l, i[g + 5], 4, 4294588738);
                l = f(l, h, j, k, i[g + 8], 11, 2272392833);
                k = f(k, l, h, j, i[g + 11], 16, 1839030562);
                j = f(j, k, l, h, i[g + 14], 23, 4259657740);
                h = f(h, j, k, l, i[g + 1], 4, 2763975236);
                l = f(l, h, j, k, i[g + 4], 11, 1272893353);
                k = f(k, l, h, j, i[g + 7], 16, 4139469664);
                j = f(j, k, l, h, i[g + 10], 23, 3200236656);
                h = f(h, j, k, l, i[g + 13], 4, 681279174);
                l = f(l, h, j, k, i[g + 0], 11, 3936430074);
                k = f(k, l, h, j, i[g + 3], 16, 3572445317);
                j = f(j, k, l, h, i[g + 6], 23, 76029189);
                h = f(h, j, k, l, i[g + 9], 4, 3654602809);
                l = f(l, h, j, k, i[g + 12], 11, 3873151461);
                k = f(k, l, h, j, i[g + 15], 16, 530742520);
                j = f(j, k, l, h, i[g + 2], 23, 3299628645);
                h = e(h, j, k, l, i[g + 0], 6, 4096336452);
                l = e(l, h, j, k, i[g + 7], 10, 1126891415);
                k = e(k, l, h, j, i[g + 14], 15, 2878612391);
                j = e(j, k, l, h, i[g + 5], 21, 4237533241);
                h = e(h, j, k, l, i[g + 12], 6, 1700485571);
                l = e(l, h, j, k, i[g + 3], 10, 2399980690);
                k = e(k, l, h, j, i[g + 10], 15, 4293915773);
                j = e(j, k, l, h, i[g + 1], 21, 2240044497);
                h = e(h, j, k, l, i[g + 8], 6, 1873313359);
                l = e(l, h, j, k, i[g + 15], 10, 4264355552);
                k = e(k, l, h, j, i[g + 6], 15, 2734768916);
                j = e(j, k, l, h, i[g + 13], 21, 1309151649);
                h = e(h, j, k, l, i[g + 4], 6, 4149444226);
                l = e(l, h, j, k, i[g + 11], 10, 3174756917);
                k = e(k, l, h, j, i[g + 2], 15, 718787259);
                j = e(j, k, l, h, i[g + 9], 21, 3951481745);
                h = c(h, o);
                j = c(j, n);
                k = c(k, q);
                l = c(l, p)
            }
            return (m(h) + m(j) + m(k) + m(l)).toLowerCase()
        }
    })
})(jQuery);

function gps_distance_mi(lat1, lon1, lat2, lon2)
{
    radTr = 0.0174532925199433;
    //var R = 6371; // km
    R = 3956; // miles
    dLat = (lat2 - lat1) * radTr;
    dLon = (lon2 - lon1) * radTr;
    lat1Rad = lat1 * radTr;
    lat2Rad = lat2 * radTr;

    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
        Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1Rad) * Math.cos(lat2Rad);
    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
    var d = R * c;

    return d;
}

listView_nohide_filter = function (text, searchString) {
    if (text == "[nohide]") return false;
    return text.toLowerCase().indexOf(searchString) === -1;
};

function trim(str)
{
    return str.replace(/^\s\s*/, '').replace(/\s\s*$/, '');
}

function ensure_string(str) {
    if (str != null && str != undefined && str != NaN && (typeof str == 'string' || (typeof str == "object" && str.constructor === String))) {
        return trim(str);
    } else {
        return "";
    }
}

function yahooPlaceFinderGeocode(address, settings) {
    // Yahoo's PlaceFinder API http://developer.yahoo.com/geo/placefinder/
    var geoAPI = 'http://where.yahooapis.com/geocode?location=' + escape(address) + '&flags=J&appid=' + YAHOO_API_KEY;

    // Issue a cross-domain AJAX request (CORS) to the GEO service.
    // Not supported in Opera and IE.
    $.getJSON(geoAPI, function (r) {

        if (r.ResultSet.Found == 1) {

            results = r.ResultSet.Results;
            if (settings.success) {
                position = {
                    coords: {
                        latitude: results[0].latitude,
                        longitude: results[0].longitude,
                        accuracy: results[0].quality
                    }
                };
                /*
                position.accuracy = results[0].quality;
                position.latitude = results[0].latitude;
                position.longitude = results[0].longitude;
                */
                settings.success(position);
            }
        } else {

            if (settings.error) {
                settings.error("The address was not found.");
            }

        }

    }).error(function () {
        if (settings.error) {
            settings.error("Your browser does not support CORS requests!");
        }
        //showError("Your browser does not support CORS requests!");
    });

}
